{"componentChunkName":"component---src-templates-tag-js","path":"/tag/scrum/","result":{"data":{"ghostTag":{"slug":"scrum","name":"Scrum","visibility":"public","feature_image":null,"description":null,"meta_title":null,"meta_description":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5ed9e2717aa22c4066f83fe8","title":"The Process Behind Program Management","slug":"the-process-behind-program-management","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/06/ProcessProgramManagement.jpg","excerpt":"Using a Program Management and Agile approach to make deliverables skyrocket.","custom_excerpt":"Using a Program Management and Agile approach to make deliverables skyrocket.","visibility":"public","created_at_pretty":"05 June, 2020","published_at_pretty":"05 June, 2020","updated_at_pretty":"05 June, 2020","created_at":"2020-06-05T11:43:05.000+05:30","published_at":"2020-06-05T12:06:33.000+05:30","updated_at":"2020-06-05T13:07:06.000+05:30","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Gojek","slug":"gojek","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Program Management","slug":"program-management","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Project Management","slug":"project-management","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Scrum","slug":"scrum","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"We’ve often talked about how Gojek doesn’t build one Super App, it builds three.\nTo achieve this, multiple Product Development Groups (PDG) exist within Gojek.\nOne of these is the GoMerchants PDG, that handles all our merchant-centric\ninitiatives, including GoBiz, our SuperApp for merchant partners.\n\nGoMerchants is an entity formed by the fusion of multiple teams that all had\ntheir own work styles. How do such diverse people come together and build\namazing things? That’s where Program Management comes into the picture.\n\nThe Challenge\nGoMerchants PDG was formed from five separate teams (SPOTS, Midtrans, Mapan,\nGoResto, Nadipos), and each team had a unique engineering culture. Across teams,\nthe total number of staff involved in cross-functional work was ~240 people.\n\nAfter a discovery phase of the process over 3 months with the various groups, we\nfound that every team was utilising different versions of project management\nmethodology and tools to track team progress. Across various teams, we\nidentified nearly a dozen different types of tools and methods including the\nScrum method, Kanban method, Jira tools, Favro Tools, and Trello tools.\n\nThe key takeaway was clear: There was no single source of truth for tracking\nteam deployment progress.\n\nThe Solution\nTo achieve our goal of reaching a high rate of (quality) deliverables with clear\ntransparency on progress, the Program Managers decided to build a program that\nset a single standard workflow for everyone involved. The end result? A meld of\nAgile best practices and a limited/select set of tools.\n\nAt the highest level, Program Management methodology focuses on adding just \nenough processes to help with efficiency — and not creating convoluted processes\nfor the sake of process. Keeping these best practices in mind, the workflow\nbuilt by the GoMerchants Program Management team entailed Scrum Process to track\nbacklog priority, using Confluence as a documentation hub, Jira for managing\nbacklog tasks, Pre-Iteration Planning Meetings, Sprint Planning, Daily Standups,\nand lastly, conducting regular Retrospectives.\n\nThe consolidated approach helped the GoMerchants team reach the rapid pace\nneeded to hit targeting of deliverables— but also helped support the team in an\nenvironment of rapidly-changing requirements via greater transparency.\n\nThere were additional benefits to this approach, as well: Instantaneous feedback\nfrom the team on what was working (and what was not), metrics to inform future\niterations of the workflow, and a reduction in deployment failure — and rollback\ndeployment risk — thanks to rapid and continuous internal communication.\n\n> “Agile software development is an approach to software development under which\nrequirements and solutions evolve through the collaborative effort of\nself-organizing and cross-functional teams and their customer(s)/end user(s).” —\nCollier, Ken W. (2011). Agile Analytics: A Value-Driven Approach to Business\nIntelligence and Data Warehousing. Pearson Education.\nTo transform quality deployment with high pace targets, the program implemented\nfar better collaboration for a large team than previously existed.\n\nAt the same time, Jira was chosen as the one crucial tool for backlog management\nfor GoMerchants. The factors in selecting Jira were the platform functionality\nis highly-configurable to the specific requirements of a team, as well, as it\nhas the flexibility to allow for usage in a wide variety of environments and\nprocesses.\n\nScrum Activities\nBelow is the flow of scrum activity. It starts from Pre-Iteration Planning\nMeeting (Pre-IPM), Retrospective, IPM/Sprint Planning, and Daily Standup:\n\nSprints\nA Sprint is a time-box of iterations, where the releasable works that align with\nsprint goals are implemented. A Sprint always has a fixed start and end date —\nthese dates should be of the same duration; typically two weeks.\n\nSource: Essential Scrum: A Practical Guide to the Most Popular Agile Process\nSprints notes: While most of GoMerchants PDG uses two-week sprints, the length\nof time can depend on several factors like the final deadline, number of people\nin the team, and holidays in the calendar. Some teams use a one-week Sprint\ncycle due to urgent work that requires moving at an accelerated pace. But,\ngenerally it is not a best practice to use one-week sprint cycles as team\nachievement moments can be missed, quality could be sacrificed, and team\nburn-out is a real risk.\n\nPre-I.P.M. (Pre-Iteration Planning Meeting)\nPre-IPM is an activity to review the active Sprint and manage backlog and Sprint\ngoal(s) for the next iteration. Pre-IPM is attended by a Product Manager, Tech\nLeads, and Program Manager. The Product Manager should write-up the ‘story’ aka\nplan, in Jira after Pre-IPM. Tech lead should advise if the story and goals for\nthe next iteration are technically achievable.\n\nAs a Program Manager, you can use spreadsheets for mapping between the story and\nteam before doing the IPM. Below is the example:\n\nPre-IPM notes: This is basically a small meeting with a PM, TechLead, HoE/HoP\n(if necessary) and PgM. The purpose is to finalise the work backlog for the team\nin the upcoming Sprint. This meeting will help streamline the Sprint Planning\nmeeting by confirming that the final requirements have been aligned by all\nstakeholders — the goal being to reduce the number of “Requirement Changes”\ngoing forward. .\n\nRetrospective\nThe purpose of a retrospective in IPM is to collect previous sprint feedback\nfrom the team. It contains some columns like:\n\n * Glad: What makes you happy in this sprint or things that went well\n * Sad: What makes you sad in this sprint and from here we can see how we can\n   improve it\n * Mad: What makes you mad or frustrated in this sprint\n * Ideas: Idea to improve our next sprint\n * Appreciation: Appreciation in this sprint, esp if there’s a pretty big team\n   achievement\n * Action Item: Action item to improve our next sprint based on Sad, Mad, and\n   Ideas columns. This is the important part to be followed up so “lesson\n   learned” value from every sprint is really working\n\nWe can use several tools to help us collect data, i.e. https://funretro.io/,\nbelow is the example:\n\nSend a retrospective link to a Slack channel before IPM and encourage the team\nto fill the cards. Do the retrospective by talking through each column 15–30\nminutes before IPM starts.\n\nRetrospective notes: This session provides the opportunity for a team to look\nback and see how they can improve. Retrospectives can be a catalyst for\norganisational change, team change or even a culture change. The Retrospective\ncan be a place to build and enable teams, or to help teams start their journey\nwith a clear understanding of where to go next. It’s a method that is very\nuseful to gauge the Team Happiness state and gain Improvement Feedback from the\nteam. A Retrospective also builds trust and helps make the team grow stronger as\nindividual members know they have an outlet to express their feedback and they\nwill be heard by their managers and colleagues. Since this process is highly\nactionable, the PgM’s have incorporated it beyond the use case of small teams,\nand have instituted it at larger scale for the entire GoMerchants PDG Org every\n6 months.\n\nIPM/Sprint Planning\nIPM/Sprint Planning is an activity that is attended by all members of the team\nto prioritise the backlog, discuss stories, and determine story points.\n\nSource: http://www.informit.com/articles/article.aspx?p=1928232Below are the\nsteps taken in an IPM:\n\nBefore IPM:\n\n * Program Manager sends a retrospective link to a Slack channel\n\nDuring IPM:\n\n * Retrospective 15 min\n * Open Sprint Report to review active sprint (Done and Not Done)\n * Complete Sprint\n * Open velocity chart to review the commitment and complete stories from the\n   previous Sprint\n * Ask the team who will take a leave and discuss with PM about achievement\n   story (this will be helpful to adjust velocity for the next Sprint)\n * The PM explains each story for a new sprint. Make sure there’s always a DoD\n   and add story points\n * Add the Sprint Goal\n * Start Sprint\n * After IPM\n * Collect result of retrospective, make sure action items are done/started to\n   be worked on\n\nDaily Standup\nStand up Preparation:\n\n * Set a daily schedule (max 15 mins) and make sure the team is committed to\n   attend stand up\n * Remind the team to update Jira 10–30 mins before stand up\n\nDuring Stand up\n\n * Open Jira dashboard to review story update and movement.\n * Create a set of Standup Notes and copy it in the team Slack channel if\n   necessary\n * Ask these questions and record the answer to each member: What did I\n   accomplish since the last daily standup? What obstacles are impeding my\n   progress? What will I do by the next daily standup?\n * Daily Stand up notes: There are times people will forget to update Jira\n   ticket (it’s a never-ending challenge 💁). As a Program Manager, we need to\n   remind/ensure their team updates Jira (at least) right beforethe stand up\n   starts.\n\nThe Results\nWe’ll let them speak for themselves!\n\nH1 & H2 2019 resultAfter building a standard approach across teams using Agile,\nJira, and other tool sets, the Program Management approach used by the\nGoMerchants PgM team to combine these elements helped to vastly improve the\neffectiveness of team performance on 2019 period. That’s a win we’ll take. 🙌\n\nAre you liking our stories? Do you want them delivered straight to your inbox? \nSign up for our newsletter! [https://mailchi.mp/go-jek/gojek-tech-newsletter]","html":"<p>We’ve often talked about how Gojek doesn’t build one Super App, it builds three. To achieve this, multiple Product Development Groups (PDG) exist within Gojek. One of these is the GoMerchants PDG, that handles all our merchant-centric initiatives, including GoBiz, our SuperApp for merchant partners.</p><p>GoMerchants is an entity formed by the fusion of multiple teams that all had their own work styles. How do such diverse people come together and build amazing things? That’s where Program Management comes into the picture.</p><h3 id=\"the-challenge\">The Challenge</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*BOZMTMudwppvAHi6\" class=\"kg-image\"></figure><p>GoMerchants PDG was formed from five separate teams (SPOTS, Midtrans, Mapan, GoResto, Nadipos), and each team had a unique engineering culture. Across teams, the total number of staff involved in cross-functional work was ~240 people.</p><p>After a discovery phase of the process over 3 months with the various groups, we found that every team was utilising different versions of project management methodology and tools to track team progress. Across various teams, we identified nearly a dozen different types of tools and methods including the Scrum method, Kanban method, Jira tools, Favro Tools, and Trello tools.</p><p>The key takeaway was clear: There was no single source of truth for tracking team deployment progress.</p><h3 id=\"the-solution\">The Solution</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*xz0BID0wK762a3It\" class=\"kg-image\"></figure><p>To achieve our goal of reaching a high rate of (quality) deliverables with clear transparency on progress, the Program Managers decided to build a program that set a single standard workflow for everyone involved. The end result? A meld of Agile best practices and a limited/select set of tools.</p><p>At the highest level, Program Management methodology focuses on adding just<em><em> </em></em>enough processes to help with efficiency — and not creating convoluted processes for the sake of process. Keeping these best practices in mind, the workflow built by the GoMerchants Program Management team entailed Scrum Process to track backlog priority, using Confluence as a documentation hub, Jira for managing backlog tasks, Pre-Iteration Planning Meetings, Sprint Planning, Daily Standups, and lastly, conducting regular Retrospectives.</p><p>The consolidated approach helped the GoMerchants team reach the rapid pace needed to hit targeting of deliverables— but also helped support the team in an environment of rapidly-changing requirements via greater transparency.</p><p>There were additional benefits to this approach, as well: Instantaneous feedback from the team on what was working (and what was not), metrics to inform future iterations of the workflow, and a reduction in deployment failure — and rollback deployment risk — thanks to rapid and continuous internal communication.</p><blockquote><em><em>“Agile software development is an approach to software development under which requirements and solutions evolve through the collaborative effort of self-organizing and cross-functional teams and their customer(s)/end user(s).” — Collier, Ken W. (2011). Agile Analytics: A Value-Driven Approach to Business Intelligence and Data Warehousing. Pearson Education.</em></em></blockquote><p>To transform quality deployment with high pace targets, the program implemented far better collaboration for a large team than previously existed.</p><p>At the same time, Jira was chosen as the one crucial tool for backlog management for GoMerchants. The factors in selecting Jira were the platform functionality is highly-configurable to the specific requirements of a team, as well, as it has the flexibility to allow for usage in a wide variety of environments and processes.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*6BKaz05opZRwL9_K\" class=\"kg-image\"></figure><h3 id=\"scrum-activities\">Scrum Activities</h3><p>Below is the flow of scrum activity. It starts from Pre-Iteration Planning Meeting (Pre-IPM), Retrospective, IPM/Sprint Planning, and Daily Standup:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/538/0*gTaqBaLJp4SmH04h\" class=\"kg-image\"></figure><h3 id=\"sprints\">Sprints</h3><p>A Sprint is a time-box of iterations, where the releasable works that align with sprint goals are implemented. A Sprint always has a <strong><strong>fixed </strong></strong>start and end date — these dates should be of the same duration; typically two weeks.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/1100/0*FW1FhCEHTQr-94pp\" class=\"kg-image\" alt=\"Source: Essential Scrum: A Practical Guide to the Most Popular Agile Process\"><figcaption><em>Source: Essential Scrum: A Practical Guide to the Most Popular Agile Process</em></figcaption></figure><p>Sprints notes: While most of GoMerchants PDG uses two-week sprints, the length of time can depend on several factors like the final deadline, number of people in the team, and holidays in the calendar. Some teams use a one-week Sprint cycle due to urgent work that requires moving at an accelerated pace. But, generally it is not a best practice to use one-week sprint cycles as team achievement moments can be missed, quality could be sacrificed, and team burn-out is a real risk.</p><h3 id=\"pre-i-p-m-pre-iteration-planning-meeting-\">Pre-I.P.M. (Pre-Iteration Planning Meeting)</h3><p>Pre-IPM is an activity to review the active Sprint and manage backlog and Sprint goal(s) for the next iteration. Pre-IPM is attended by a Product Manager, Tech Leads, and Program Manager. The Product Manager should write-up the ‘story’ aka plan, in Jira after Pre-IPM. Tech lead should advise if the story and goals for the next iteration are technically achievable.</p><p>As a Program Manager, you can use spreadsheets for mapping between the story and team before doing the IPM. Below is the example:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/739/0*nScsmP0TJmMn21oF\" class=\"kg-image\"></figure><p>Pre-IPM notes: This is basically a small meeting with a PM, TechLead, HoE/HoP (if necessary) and PgM. The purpose is to finalise the work backlog for the team in the upcoming Sprint. This meeting will help streamline the Sprint Planning meeting by confirming that the final requirements have been aligned by all stakeholders — the goal being to reduce the number of “Requirement Changes” going forward. .</p><h2 id=\"retrospective\"><strong>Retrospective</strong></h2><p>The purpose of a retrospective in IPM is to collect previous sprint feedback from the team. It contains some columns like:</p><ul><li><strong><strong>Glad</strong></strong>: What makes you happy in this sprint or things that went well</li><li><strong><strong>Sad</strong></strong>: What makes you sad in this sprint and from here we can see how we can improve it</li><li><strong><strong>Mad</strong></strong>: What makes you mad or frustrated in this sprint</li><li><strong><strong>Ideas</strong></strong>: Idea to improve our next sprint</li><li><strong><strong>Appreciation</strong></strong>: Appreciation in this sprint, esp if there’s a pretty big team achievement</li><li><strong><strong>Action Item</strong></strong>: Action item to improve our next sprint based on Sad, Mad, and Ideas columns. This is the important part to be followed up so “lesson learned” value from every sprint is really working</li></ul><p>We can use several tools to help us collect data, i.e. <a href=\"https://funretro.io/\" rel=\"noopener\">https://funretro.io/</a>, below is the example:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*tbPuQ0kjLePWqVsB\" class=\"kg-image\"></figure><p>Send a retrospective link to a Slack channel before IPM and encourage the team to fill the cards. Do the retrospective by talking through each column 15–30 minutes before IPM starts.</p><p>Retrospective notes: This session provides the opportunity for a team to look back and see how they can improve. Retrospectives can be a catalyst for organisational change, team change or even a culture change. The Retrospective can be a place to build and enable teams, or to help teams start their journey with a clear understanding of where to go next. It’s a method that is very useful to gauge the Team Happiness state and gain Improvement Feedback from the team. A Retrospective also builds trust and helps make the team grow stronger as individual members know they have an outlet to express their feedback and they will be heard by their managers and colleagues. Since this process is highly actionable, the PgM’s have incorporated it beyond the use case of small teams, and have instituted it at larger scale for the entire GoMerchants PDG Org every 6 months.</p><h3 id=\"ipm-sprint-planning\">IPM/Sprint Planning</h3><p>IPM/Sprint Planning is an activity that is attended by all members of the team to prioritise the backlog, discuss stories, and determine story points.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-7.png\" class=\"kg-image\"></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-8.png\" class=\"kg-image\"><figcaption><em>Source: </em><a href=\"http://www.informit.com/articles/article.aspx?p=1928232\" rel=\"noopener\"><em>http://www.informit.com/articles/article.aspx?p=1928232</em></a></figcaption></figure><p>Below are the steps taken in an IPM:</p><p><strong><strong>Before IPM:</strong></strong></p><ul><li>Program Manager sends a retrospective link to a Slack channel</li></ul><p><strong><strong>During IPM:</strong></strong></p><ul><li>Retrospective 15 min</li><li>Open Sprint Report to review active sprint (Done and Not Done)</li><li>Complete Sprint</li><li>Open velocity chart to review the commitment and complete stories from the previous Sprint</li><li>Ask the team who will take a leave and discuss with PM about achievement story (this will be helpful to adjust velocity for the next Sprint)</li><li>The PM explains each story for a new sprint. Make sure there’s always a DoD and add story points</li><li>Add the Sprint Goal</li><li>Start Sprint</li><li>After IPM</li><li>Collect result of retrospective, make sure action items are done/started to be worked on</li></ul><h3 id=\"daily-standup\">Daily Standup</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-9.png\" class=\"kg-image\"></figure><p><strong><strong>Stand up Preparation:</strong></strong></p><ul><li>Set a daily schedule (max 15 mins) and make sure the team is <strong><strong>committed</strong></strong> to attend stand up</li><li>Remind the team to update Jira 10–30 mins before stand up</li></ul><p><strong><strong>During Stand up</strong></strong></p><ul><li>Open Jira dashboard to review story update and movement.</li><li>Create a set of Standup Notes and copy it in the team Slack channel if necessary</li><li>Ask these questions and record the answer to each member: <em><em>What did I accomplish since the last daily standup? What obstacles are impeding my progress? What will I do by the next daily standup?</em></em></li><li>Daily Stand up notes: There are times people will forget to update Jira ticket (it’s a never-ending challenge 💁). As a Program Manager, we need to remind/ensure their team updates Jira (at least) <strong><strong>right before</strong></strong>the stand up starts.</li></ul><h3 id=\"the-results\">The Results</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-10.png\" class=\"kg-image\"></figure><p>We’ll let them speak for themselves!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-13.png\" class=\"kg-image\"><figcaption>H1 &amp; H2 2019 result</figcaption></figure><p>After building a standard approach across teams using Agile, Jira, and other tool sets, the Program Management approach used by the GoMerchants PgM team to combine these elements helped to vastly improve the effectiveness of team performance on 2019 period. That’s a win we’ll take. 🙌</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-14.png\" class=\"kg-image\"></figure><p>Are you liking our stories? Do you want them delivered straight to your inbox? <a href=\"https://mailchi.mp/go-jek/gojek-tech-newsletter\" rel=\"noopener\">Sign up for our newsletter!</a></p><p></p><p></p>","url":"https://gojek-ghost.zysk.in/the-process-behind-program-management/","canonical_url":null,"uuid":"6ab38ee0-3e63-446e-ab05-9f3b29c811ad","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ed9e2717aa22c4066f83fe8","reading_time":7}}]},"tags":{"edges":[{"node":{"name":"Culture","slug":"culture"}},{"node":{"name":"Data","slug":"data"}},{"node":{"name":"Design","slug":"design"}},{"node":{"name":"News","slug":"news"}},{"node":{"name":"Stories","slug":"stories"}},{"node":{"name":"Tech","slug":"tech"}},{"node":{"name":"Funding","slug":"funding"}},{"node":{"name":"Gojek","slug":"gojek"}},{"node":{"name":"Program Management","slug":"program-management"}},{"node":{"name":"Project Management","slug":"project-management"}},{"node":{"name":"Scrum","slug":"scrum"}},{"node":{"name":"Startup","slug":"startup"}}]}},"pageContext":{"slug":"scrum","limit":12,"skip":0,"numberOfPages":1,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":null,"previousPagePath":null,"nextPagePath":null}}}