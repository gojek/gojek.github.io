{"componentChunkName":"component---src-templates-author-js","path":"/author/gojek/page/4/","result":{"data":{"ghostAuthor":{"slug":"gojek","name":"Gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","cover_image":"https://gojek-ghost.zysk.in/content/images/2020/05/GoRide-with-Passenger.jpg","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","location":null,"website":"https://www.gojek.io","twitter":"@gojektech","facebook":"gojektech"},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5eb12b71f7c7da001effcdbe","title":"How Gojek Manages 1 million Drivers With 12 Engineers (Part 1)","slug":"how-gojek-manages-1-million-drivers-with-12-engineers-part-1","featured":true,"feature_image":"https://res-3.cloudinary.com/hcq4cvthp/image/upload/q_auto/v1/ghost-blog-images/1_0G01nMPD--K_MrKhhkurtw.jpg","excerpt":"The story of GOJEK’s first ever team, and consequently, the psyche of how 200 engineers run a Super App of 18+ products.","custom_excerpt":"The story of GOJEK’s first ever team, and consequently, the psyche of how 200 engineers run a Super App of 18+ products.","visibility":"public","created_at_pretty":"05 May, 2020","published_at_pretty":"24 May, 2018","updated_at_pretty":"12 May, 2020","created_at":"2020-05-05T14:31:37.000+05:30","published_at":"2018-05-24T09:30:00.000+05:30","updated_at":"2020-05-12T11:57:36.000+05:30","meta_title":null,"meta_description":"The story of GOJEK’s first ever team, and consequently, the psyche of how 200 engineers run a Super App of 18+ products.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Stories","slug":"stories","description":"Deep dives into high-impact initiatives and products that helped Gojek create significant impact.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Stories","slug":"stories","description":"Deep dives into high-impact initiatives and products that helped Gojek create significant impact.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"By Adithya Venkatesan\n\nIn Norse mythology, Yggdrasil is a gigantic mythical tree that connects the nine\nworlds of Norse cosmology. It’s a holy tree whose branches touch the heavens.\nThe gods hold court beneath Yggdrasil — debating the fates of other gods, men\nand monsters. It’s the tree of life and the centre of everything in Norse\nmythology. In GOJEK, think of the `Allocations` team as this eternal green ash\ntree. Our multiple products rely on this team to assign drivers to complete\norders.\n\nThe team cuts across products and services responsible for 1,000,000+ registered\ndrivers on our platform.\n\nAnd 12 engineers do this.\n\nA similar ride-sharing equivalent has 300-odd people solving the same problem\nand still does fewer bookings. But how do they do it? This is their story.\n\nOn planet Earth, problems galore\nWhen GOJEK started in 2010, it all began with a call centre. Customers would\ncall a number, the call centre would ‘allocate’ a driver after looking at an\nExcel sheet of drivers in the roster. Our CEO Nadiem Makarim was the first\nperson to test the app built for drivers and customers. As soon as a dummy order\nwas created and Nadiem got the first notification, GOJEK was open for business.\n\nAt its peak in 2014, GOJEK had 200 drivers. The 3-person engineering team had a\nbasic stop-gap model of matchmaking between a driver and a customer. This\ncodebase had to be reworked to match scale. The new matchmaking codebase was\nbuilt in two days and could handle about 700 drivers. It was all manual and\nsomething had to be done to automate\n[https://blog.gojekengineering.com/how-we-do-what-we-do-at-go-jek-tech-d1d5d952e13] \nthe whole process.\n\nIn the beginning of 2015, a version of the app was launched to keep pace with\nincreasing demand. GO-RIDE, GO-FOOD and GO-SEND went live. Customers would ‘bid’\nfor a driver, drivers would get a notification, accept a drive and voila, we’re\ngood to go. This was the birth of the ‘bid engine’ — a classic matchmaker\nbetween supply and demand: Driver and Customer. It would form the genesis on\nwhich GOJEK was going to be built. The problem: siloed boxes.\n\nThere were a total of three products with the same underlying infrastructure,\nbut no interconnectedness. THAT was a problem that shouldn’t exist when success\ndepends on deeper linkage between all teams. This problem is further pronounced\nwhen you realise all three teams were working on the same infrastructure.\n\nImportantly, GOJEK simply wasn’t prepared to handle the kind of adoption and\ngrowth the company began to witness as soon as the app was launched.\n\nThe algorithm started to crumble. The engineering was pretty straightforward\nwith 10–15 lines of code, and solved problems for a small set of data. As the\ndrivers increased, downtimes became a routine affair. There were way too many\nbottlenecks. GOJEK was failing, and fast.\n\nSoon, Sequoia had mutual investment portfolios and unlocked some doors. Sidu\nPonnappa, our current India Head, then the CEO of CodeMonk, travelled to\nIndonesia to pick between three of Sequoia’s companies. The team’s ultimate\ndecision to work with GOJEK is not entirely surprising because it was bigger,\nlarger than anything they had witnessed in India. The market was ripe for the\ntaking. Read his telling tale from his first visit to Indonesia here.\n[https://blog.gojekengineering.com/my-go-jek-story-af5f1925bfe]\n\nIn no time, Nadiem acquired CodeMonk. But before that, our current CTO, Niranjan\nParanjappe was being poached. ? The team stood together. It was all, or none.\n\nAnd Nadiem wanted all. The deal was closed in a small tea shop between Sidu,\nNiranjan, Nadiem, Ajey and Kevin. Overnight, GOJEK had one of India’s best\nconsulting firms in its arsenal. The task for the engineering team: Work on the\nbidding engine. No more downtimes.\n\nIt’s the 0’s and 1’s\nThe old codebase was written in Java. It’s a programming language that belonged\nto the Internet age. But not for a startup in 2015 that was exploding in demand\nand imploding with a lack of resources and engineering wherewithal. Why Java?\nBecause, the classic Golden Hammer Anti-Pattern:\n\n“If all you have is a hammer, everything looks like a nail.” And hence, ‘I know\nJava, so Java is the best.’\n\nNiranjan Paranjape\n[https://medium.com/u/689ebe477c46?source=post_page-----978af9ccfd32----------------------]\n, our now CTO (Ajey Gore\n[https://medium.com/u/bb9ef62c7bae?source=post_page-----978af9ccfd32----------------------] \nis our Group CTO), plugged in the hard drive and checked the code. As soon as he\nopened the README file, the first line was mvn install -DskipTest\n\nThe code had *never* been tested.\n\nIn other words, the code was live without ever passing a single quality check.\nThe old codebase was called Stan Marsh\n[https://blog.gojekengineering.com/thank-you-stan-marsh-29db553544bf]. For the\nuninitiated, Stan Marsh is a character from South Park, and if you watch the\nshow, you’d get the obvious reference to the famous line:\n\n> “Dude, this is pretty f****d up right here.”\nAnd thus it came to be. Stan Marsh was the legacy code on which GOJEK was going\nto be built. Because there was no test harness, it was difficult to understand\nwhich portion of the app was working, and which wasn’t. Considering the app was\nlive, no one wanted to touch a ticking time bomb. It was… sorry, is… very much\npart of engineering folklore. (More on that later)\n\nAs urban legends go, Niranjan re-wrote the entire codebase in Golang, a language\nhe didn’t know. Three nights. A dozen Redbulls. Two dozen coffees. Golang could\nhandle concurrency, manage load; the kind GOJEK was witnessing. The mothership\nwas ready. Or so the team thought.\n\nIt wasn’t an easy decision to go with Golang. Not many knew the programming\nlanguage. But some risks are worth taking — and that defines good engineering\nfrom great. Luckily, this initial decision-making set the tone for the team;\nlearn, experiment, adapt, take responsibility or be disrupted. In a month,\nGOJEK’s driver count tripled. But… there were more problems to come. Bigger fish\nto fry.\n\nFor Part 2 of the story, please click here\n[https://blog.gojekengineering.com/how-go-jek-manages-1-million-drivers-with-12-engineers-part-2-35f6a27a0faf]\n\n\n--------------------------------------------------------------------------------\n\nStory credits: Shobhit Srivastava\n[https://medium.com/u/e5f92a17704d?source=post_page-----978af9ccfd32----------------------]\n, Ranjeet Singh\n[https://medium.com/u/710d3b419a5a?source=post_page-----978af9ccfd32----------------------]\n, Mehakdeep Singh\n[https://medium.com/u/36ce12a82c52?source=post_page-----978af9ccfd32----------------------]\n, Bergas Bimo Branarto\n[https://medium.com/u/5cffcceadf08?source=post_page-----978af9ccfd32----------------------]","html":"<p>By Adithya Venkatesan</p><p>In Norse mythology, <em><em>Yggdrasil</em></em> is a gigantic mythical tree that connects the nine worlds of Norse cosmology. It’s a holy tree whose branches touch the heavens. The gods hold court beneath <em><em>Yggdrasil — </em></em>debating the fates of other gods, men and monsters. It’s the tree of life and the centre of everything in Norse mythology. In GOJEK, think of the <strong><strong><em><em>`Allocations` </em></em></strong></strong>team as this eternal green ash tree. Our multiple products rely on this team to assign drivers to complete orders.</p><p>The team cuts across products and services responsible for 1,000,000+ registered drivers on our platform.</p><p><strong>And 12 engineers do this.</strong></p><p>A similar ride-sharing equivalent has 300-odd people solving the same problem and still does fewer bookings. But how do they do it? This is their story.</p><h2 id=\"on-planet-earth-problems-galore\">On planet Earth, problems galore</h2><p>When GOJEK started in 2010, it all began with a call centre. Customers would call a number, the call centre would ‘allocate’ a driver after <em><em>looking at an Excel sheet of drivers</em></em> in the roster. Our CEO Nadiem Makarim was the first person to test the app built for drivers and customers. As soon as a dummy order was created and Nadiem got the first notification, GOJEK was open for business.</p><p>At its peak in 2014, GOJEK had 200 drivers. The 3-person engineering team had a basic stop-gap model of matchmaking between a driver and a customer. This codebase had to be reworked to match scale. The new matchmaking codebase was built in two days and could handle about 700 drivers. It was all manual and something had to be done to <a href=\"https://blog.gojekengineering.com/how-we-do-what-we-do-at-go-jek-tech-d1d5d952e13\" rel=\"noopener\">automate</a> the whole process.</p><p>In the beginning of 2015, a version of the app was launched to keep pace with increasing demand. GO-RIDE, GO-FOOD and GO-SEND went live. Customers would ‘bid’ for a driver, drivers would get a notification, accept a drive and voila, we’re good to go. This was the birth of the ‘<strong><strong>bid engine’ — a classic matchmaker between supply and demand:</strong></strong> Driver and Customer. <em><em>It would form the genesis on which GOJEK was going to be built</em></em>. The problem: siloed boxes.</p><p>There were a total of three products with the same underlying infrastructure, but no interconnectedness. THAT was a problem that shouldn’t exist when success depends on deeper linkage between all teams. This problem is further pronounced when you realise all three teams were working on the same infrastructure.</p><p><em><em>Importantly, GOJEK simply wasn’t prepared to handle the kind of adoption and growth the company began to witness as soon as the app was launched.</em></em></p><p>The algorithm started to crumble. The engineering was pretty straightforward with 10–15 lines of code, and solved problems for a small set of data. As the drivers increased, downtimes became a routine affair. There were way too many bottlenecks. <strong><strong>GOJEK was failing, and fast.</strong></strong></p><p>Soon, Sequoia had mutual investment portfolios and unlocked some doors. Sidu Ponnappa, our current India Head, then the CEO of CodeMonk, travelled to Indonesia to pick between three of Sequoia’s companies. The team’s ultimate decision to work with GOJEK is not entirely surprising because it was bigger, larger than anything they had witnessed in India. The market was ripe for the taking. Read his telling tale from his first visit to Indonesia <a href=\"https://blog.gojekengineering.com/my-go-jek-story-af5f1925bfe\" rel=\"noopener\">here.</a></p><p><em><em>In no time, Nadiem acquired CodeMonk. But before that, our current CTO, Niranjan Paranjappe was being poached. <em>? </em>The team stood together. It was all, or none.</em></em></p><p>And Nadiem wanted all. <strong><strong>The deal was closed in a small tea shop</strong></strong> between Sidu, Niranjan, Nadiem, Ajey and Kevin. Overnight, GOJEK had one of India’s best consulting firms in its arsenal. The task for the engineering team: Work on the bidding engine. No more downtimes.</p><h2 id=\"it-s-the-0-s-and-1-s\">It’s the 0’s and 1’s</h2><p>The old codebase was written in Java. It’s a programming language that belonged to the Internet age. But not for a startup in 2015 that was exploding in demand and imploding with a lack of resources and engineering wherewithal. Why Java? Because, the classic <strong><strong>Golden Hammer Anti-Pattern:</strong></strong></p><p><em><em>“If all you have is a hammer, everything looks like a nail.” And hence, ‘I know Java, so Java is the best.’</em></em></p><p><a href=\"https://medium.com/u/689ebe477c46?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Niranjan Paranjape</a>, our now CTO (<a href=\"https://medium.com/u/bb9ef62c7bae?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Ajey Gore</a> is our Group CTO), plugged in the hard drive and checked the code. As soon as he opened the README file, the first line was mvn install -DskipTest</p><p><strong><strong>The code had *<em><em>never</em></em>* been tested.</strong></strong></p><p>In other words, the code was live without ever passing a single quality check. The old codebase was called <a href=\"https://blog.gojekengineering.com/thank-you-stan-marsh-29db553544bf\" rel=\"noopener\"><strong><strong>Stan Marsh</strong></strong></a><strong><strong>.</strong></strong> For the uninitiated, Stan Marsh is a character from South Park, and if you watch the show, you’d get the obvious reference to the famous line:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1600/1*Mk4tc6cfIHlC_f1CblNGNQ.jpeg\" class=\"kg-image\"></figure><blockquote><em><em>“Dude, this is pretty f****d up right here.”</em></em></blockquote><p>And thus it came to be. <strong><strong>Stan Marsh was the legacy code on which GOJEK was going to be built</strong></strong>. Because there was no test harness, it was difficult to understand which portion of the app was working, and which wasn’t. Considering the app was live, no one wanted to touch a ticking time bomb. It was… sorry, is… very much part of engineering folklore. (More on that later)</p><p>As urban legends go, Niranjan re-wrote the entire codebase in Golang, a language he didn’t know. Three nights. A dozen Redbulls. Two dozen coffees. Golang could handle concurrency, manage load; the kind GOJEK was witnessing. The mothership was ready. Or so the team thought.</p><p>It wasn’t an easy decision to go with Golang. Not many knew the programming language. But some risks are worth taking — and that defines good engineering from great. Luckily, this initial decision-making set the tone for the team; learn, experiment, adapt, take responsibility or be disrupted. In a month, GOJEK’s driver count tripled. But… there were more problems to come. Bigger fish to fry.</p><p>For Part 2 of the story, please click <a href=\"https://blog.gojekengineering.com/how-go-jek-manages-1-million-drivers-with-12-engineers-part-2-35f6a27a0faf\" rel=\"noopener\">here</a></p><hr><p>Story credits: <a href=\"https://medium.com/u/e5f92a17704d?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Shobhit Srivastava</a>, <a href=\"https://medium.com/u/710d3b419a5a?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Ranjeet Singh</a>, <a href=\"https://medium.com/u/36ce12a82c52?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Mehakdeep Singh</a>, <a href=\"https://medium.com/u/5cffcceadf08?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Bergas Bimo Branarto</a></p>","url":"https://gojek-ghost.zysk.in/how-gojek-manages-1-million-drivers-with-12-engineers-part-1/","canonical_url":null,"uuid":"ba3d779e-27f2-41a6-ac1d-cd753222d7dd","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eb12b71f7c7da001effcdbe","reading_time":4}},{"node":{"id":"Ghost__Post__5eb128c6f7c7da001effcd94","title":"Gojek Engineering — Guiding Principles 101","slug":"gojek-engineering-guiding-principles-101","featured":false,"feature_image":"https://res-3.cloudinary.com/hcq4cvthp/image/upload/q_auto/v1/ghost-blog-images/Culture1.gif","excerpt":"Pointers that help us build and run a unicorn startup,","custom_excerpt":"Pointers that help us build and run a unicorn startup,","visibility":"public","created_at_pretty":"05 May, 2020","published_at_pretty":"04 January, 2017","updated_at_pretty":"12 May, 2020","created_at":"2020-05-05T14:20:14.000+05:30","published_at":"2017-01-04T09:30:00.000+05:30","updated_at":"2020-05-12T11:57:57.000+05:30","meta_title":null,"meta_description":"Pointers that help us build and run a unicorn startup.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Culture","slug":"culture","description":"Writings on work culture at Gojek—explained through the lens of engineering and product decisions, and the experiences of GoTroops.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Culture","slug":"culture","description":"Writings on work culture at Gojek—explained through the lens of engineering and product decisions, and the experiences of GoTroops.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"By Ajey Gore\n\nWorking at Gojek means working with the best and brightest on the most\ncutting-edge technologies. While it is extremely rewarding, it is also\nchallenging. This is because we often work on tough problems with no clear\nsolution — which involves taking risks and learning things on the fly.\n\nAll this, while competing with the best in the industry.\n\nThat’s why our guiding principles serve as a great reference point to deal with\nsituations that arise every day. Here are some that we abide by:\n\nEveryone writes code — At Gojek, we believe that Software\nPrincipals/Architects/Engineers can only do the right thing when they work on\ncode themselves. It’s the only way to decide what’s working and what’s not. We\ndon’t believe that software requires a 50,000 foot overview with people\nexclusively working on the blueprint. At Gojek, writing software is not a\nlow-level task; it’s at the very core of what we do.\n\nLeaders who code are better judges of technical skill.\n\nEveryone needs to ‘walk the talk’ — We respect people who get down in the\ntrenches and take a hands-on approach to problem solving. Based on our\nexperience, standing at a distance and issuing commandments has many a time been\ninefficient and error prone, and hence we avoid this.\n\nLeaders are grown and not made — We believe in acquired respect and leadership,\nnot leadership by position. At Gojek, you earn your leadership mettle. We\nbelieve in helping our people grow into leadership roles by giving them chances,\nrisk appetite and freedom. We trust our people and support them to do the right\nthing at any given moment. In my own career, I’ve been privileged enough to have\nfound some amazing mentors, and I am glad to be able to continue the legacy at\nGojek.\n\nEvery decision is correct at the time it is made — Swift decision-making is\nextremely important in a fast paced environment like ours. Once a decision is\nmade, we don’t constantly agonise over it or second guess. We trust that\nwhenever someone makes a decision, it is the right one, given the information\navailable to them at that time. Only the passage of time can tell us whether a\nparticular decision was right or wrong. It’s OK to change decisions, and we\nencourage people to not be afraid to make a decision.\n\nEvery person has some strengths, even if we don’t always see them — A great team\nis built with a group of people who have complementary skill sets. A combination\nof different strengths make teams that can tackle all kinds of situations. At\nGojek, we believe each one of us is unique and has unique strengths. It’s just a\nmatter of finding the right role to match the skills. Teams become super strong\nwhen they appreciate each other’s strengths.\n\nWorking in tech means learning all the time — Learning is important in every\nfield. In the technology industry, it is a matter of life and death. Technology\nis changing all the time, what worked a decade ago may be completely obsolete\nnow. For example, practices that worked in Waterfall don’t work in Agile, and\nuser experiences on mobile apps were unimaginable a few years back. So, we\nconstantly look for and admire people who are curious and willing to learn.\n\nThe best part? Such people will always hire people they can learn from!\n\nPair Programming and Test-Driven Development (TDD) work — If they didn’t, our\nteams wouldn’t exist. Wherever we have followed this, we found our team’s job on\nsupporting software is more around features than bugs! We have experienced over\ndecades that this helps us build features faster, and mature teams organically.\nThe bottom line is : to write beautiful code, we believe there is no better way\nthan rigorous pair programming and practising TDD.","html":"<p>By Ajey Gore</p><p>Working at Gojek means working with the best and brightest on the most cutting-edge technologies. While it is extremely rewarding, it is also challenging. This is because we often work on tough problems with no clear solution — which involves taking risks and learning things on the fly.</p><p><em><em>All this, while competing with the best in the industry.</em></em></p><p>That’s why our guiding principles serve as a great reference point to deal with situations that arise every day. Here are some that we abide by:</p><p><strong><strong>Everyone writes code — </strong></strong>At Gojek, we believe that Software Principals/Architects/Engineers can only do the right thing when they work on code themselves. It’s the only way to decide what’s working and what’s not. We don’t believe that software requires a 50,000 foot overview with people exclusively working on the blueprint. At Gojek, writing software is <strong><strong>not</strong></strong> a low-level task; it’s at the very core of what we do.</p><p>Leaders who code are better judges of technical skill.</p><p><strong><strong>Everyone needs to ‘walk the talk’ — </strong></strong>We respect people who get down in the trenches and take a hands-on approach to problem solving. Based on our experience, standing at a distance and issuing commandments has many a time been inefficient and error prone, and hence we avoid this.</p><p><strong><strong>Leaders are grown and not made</strong></strong> — We believe in acquired respect and leadership, not leadership by position. At Gojek, you earn your leadership mettle. We believe in helping our people grow into leadership roles by giving them chances, risk appetite and freedom. We trust our people and support them to do the right thing at any given moment. In my own career, I’ve been privileged enough to have found some amazing mentors, and I am glad to be able to continue the legacy at Gojek.</p><p><strong><strong>Every decision is correct at the time it is made</strong></strong> — Swift decision-making is extremely important in a fast paced environment like ours. Once a decision is made, we don’t constantly agonise over it or second guess. We trust that whenever someone makes a decision, it is the right one, given the information available to them at that time. Only the passage of time can tell us whether a particular decision was right or wrong. It’s OK to change decisions, and we encourage people to not be afraid to make a decision.</p><p><strong><strong>Every person has some strengths, even if we don’t always see them</strong></strong> — A great team is built with a group of people who have complementary skill sets. A combination of different strengths make teams that can tackle all kinds of situations. At Gojek, we believe each one of us is unique and has unique strengths. It’s just a matter of finding the right role to match the skills. Teams become super strong when they appreciate each other’s strengths.</p><p><strong><strong>Working in tech means learning all the time</strong></strong> — Learning is important in every field. In the technology industry, it is a matter of life and death. Technology is changing all the time, what worked a decade ago may be completely obsolete now. For example, practices that worked in Waterfall don’t work in Agile, and user experiences on mobile apps were unimaginable a few years back. So, we constantly look for and admire people who are curious and willing to learn.</p><p>The best part? Such people will always hire people they can learn from!</p><p><strong><strong>Pair Programming and Test-Driven Development (TDD) work </strong></strong>— If they didn’t, our teams wouldn’t exist. Wherever we have followed this, we found our team’s job on supporting software is more around features than bugs! We have experienced over decades that this helps us build features faster, and mature teams organically. The bottom line is : to write beautiful code, we believe there is no better way than rigorous pair programming and practising TDD.</p>","url":"https://gojek-ghost.zysk.in/gojek-engineering-guiding-principles-101/","canonical_url":null,"uuid":"9afc126f-c3cc-4649-8eb1-6b1f10431f93","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eb128c6f7c7da001effcd94","reading_time":3}}]}},"pageContext":{"slug":"gojek","limit":12,"skip":36,"numberOfPages":4,"humanPageNumber":4,"prevPageNumber":3,"nextPageNumber":null,"previousPagePath":"/author/gojek/page/3/","nextPagePath":null}}}