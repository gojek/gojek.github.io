{"componentChunkName":"component---src-templates-post-js","path":"/blog/reducing-latency-with-sidecar/","result":{"data":{"ghostPost":{"id":"Ghost__Post__5ecb637d7aa22c4066f83f36","title":"Reducing Latency with Sidecar","slug":"reducing-latency-with-sidecar","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/05/1_HWgBO6jgmlmk6-7_ewf7Yg.jpeg","excerpt":"How the sidecar pattern helped in our ongoing quest to reduce latency in our experimentation platform.","custom_excerpt":"How the sidecar pattern helped in our ongoing quest to reduce latency in our experimentation platform.","visibility":"public","created_at_pretty":"25 May, 2020","published_at_pretty":"18 November, 2019","updated_at_pretty":"25 May, 2020","created_at":"2020-05-25T11:49:41.000+05:30","published_at":"2019-11-18T09:30:00.000+05:30","updated_at":"2020-05-25T11:54:40.000+05:30","meta_title":"Reducing Latency with Sidecar","meta_description":"How the sidecar pattern helped in our ongoing quest to reduce latency in our experimentation platform.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"You’ve probably heard about Litmus [http://bit.ly/2RGxvbg], Gojek’s in-house\nexperimentation platform. Since we built it, the adoption of Litmus across Gojek\nteams has been steadily increasing. More experiments are executed and more\nclients (in this case, Gojek teams) are integrated.\n\nBesides this, another requirement is to integrate Litmus with other backend\nservices directly, instead of solely with the mobile app. However, various\nclient backend services have their own SLA and most of them are linked to\nlatency. So, in order to client requirements, we have to reduce Litmus latency\nas much as possible.\n\nIn this post, we talk about our thought process behind delivering an initial\nsidecar design to achieve this goal,\n\nKnow your enemies\nFirst thing first, we needed to figure out where the bottleneck was. After\ndigging through some data, it turned out 30% of total time in a Litmus API call\nwas dominated by database call, and the number of database calls is ~2000 qps.\n\nBased on this fact, we decided to use cache. Now, we obviously could not use an\nexternal cache like Redis or Memcached. If we used those, we would be adding an\nadditional call. 😑\n\nInstead, we decided to use in-memory cache. Since Litmus was written in Clojure,\nwe went with caffeine cache [https://github.com/ben-manes/caffeine], which is\ngood enough to be used in JVM. We implemented the in-memory cache and the\ndatabase calls dropped from ~2000 qps to ~10 qps. The API latency also dropped\naround 10%.\n\nGood, but Not Good Enough. We Needed More.\nThe implementation of in-memory cache and further tinkering with Litmus\nprocesses would not be enough on their own. Our next approach was to reduce the\nhops between client and Litmus servers.\n\nHow? By moving Litmus server so it is geographically closer to the client?\n\n> Nah, we can do one better.\nWe pulled our Litmus server as close as possible to the backend service client.\nTo achieve this, we used sidecar pattern. We created a Litmus sidecar that\nresides in the same box as the backend service client. A Litmus sidecar can be\nseen as a mini version of the Litmus server that specifically serves the\ndedicated backend service client in the same box (VM).\n\nTweaking the Nuts and Bolts\nTo know how effective the sidecar pattern is, we need to know the base latency\nof Litmus server. We created 10 new active experiments specifically to get the\nbase latency number. With 20 concurrency and 10 request per second, the 99\npercentile was 23.55 ms.\n\nNeed faster API calls? Use gRPC\nWe used gRPC over REST wherever we could in our Litmus sidecar. gRPC also has\nvarious features such as push/pull streaming and client-side load balancing that\ncan be utilised for further enhancement. It’s fun stuff! 😁\n\nHow do we maintain our sidecar without permission to maintain the backend\nservice client box?\nIn Gojek, each team can only have permission to access its own components/boxes.\nIt is not possible (or scalable) to access all our backend service client boxes.\n\nWe could have considered this if we had only two or three clients. However, when\nyou’re building for an organisation of Gojek’s scale with the hope of having all\nteams adopt Litmus in their services, we couldn’t go down this route.\n\nOn the other hand, we still needed the ability to check the health of Litmus\nsidecars in every backend service client and develop a sidecar app that complies\nwith several 12 factor apps [https://12factor.net/] criteria (treat logs as\nevent streams and store config in the environment).\n\nSource\n[https://d33wubrfki0l68.cloudfront.net/24c41d54613afb774bff0a383043f8a47f4d0fd7/a14fb/static/img/consul-services.png]\nWe decided to use Consul for service discovery\n[https://www.consul.io/discovery.html] and key-value config\n[https://www.consul.io/docs/agent/kv.html]. In addition being easy to use and\nhaving a nice dashboard UI, Consul service discovery also supports health\nchecks.\n\nAfter we set up the infra (Consul server, agent, etc), we just needed to add our\nservice definition config along with our litmus sidecar to the backend service\nclient box. For the Consul KV itself, Consul supports hot reloading, which means\nwe don’t need to restart clients’ litmus sidecar if there are config changes.\n\nHowever, we needed to handle the logic of hot reloading in the litmus sidecar\napp by ourself. For the logging part, Gojek already has a logging tools called \nBarito\n[https://blog.gojekengineering.com/how-we-built-barito-to-enhance-logging-19f80b89496f] \nthat forwards the system logs so that we don’t have to access client boxes with\nssh.\n\nHere is the high-level architecture of how litmus sidecar integrates with client\nbackend services. Instead of pointing to Litmus server address, now backend\nservice clients only need to point to its localhost with Litmus sidecar port.\n\nLitmus sidecar in the same box as client backend serviceHow is the data\ndistributed?\nAs an agent of Litmus server that resides on the same box as the client, Litmus\nsidecar needs to have access to the same data as Litmus server.\n\n> This was something we discussed long and hard. The trade off between speed and\ndata consistency, the trade off between consistency and availability, and so on.\nAs our purpose was to reduce latency, speed became our first class citizen. At\nleast for now, it is okay for us to have eventually consistent data in our\nLitmus sidecar. We also decided to persist the data in the client box. We don’t\nstore all Litmus server data, only what the client needs.\n\nWe wanted our Litmus sidecar as light as possible, so it does not disturb the\nmain process in the box. Instead of using some SQL database, we decided to use\nKV store BadgerDB for persistence storage.\n\nHow to synchronise data between Litmus sidecar and server?\nWe came up with several ideas around this, but decided to use the simplest one\nfor our initial design. Litmus sidecar pulls the data that it needs periodically\nand persists it with BadgerDB.\n\nAlrighty then, let’s measure how good our sidecar is\nUsing the same setup as we did in measuring base latency, the 99 percentile\nlatency dropped to 6.91 ms. ✌\n\nNew clients are now integrating with sidecar, but we didn’t stop there. We are\ncontinuously optimising our Litmus sidecar app, and you can read more about our\nefforts in this post [http://bit.ly/2LQb6a3].\n\nSo, that was the thought process behind building sidecar to reduce latency. We\nbelieve there is still room for improvement, and would love to hear your\nthoughts in the comments.\n\nWant our stories sent straight to your inbox? Sign up for our newsletter!\n[https://mailchi.mp/go-jek/gojek-tech-newsletter]\n\ngojek.jobs [http://bit.ly/2KslIe4]","html":"<p>You’ve probably heard about <a href=\"http://bit.ly/2RGxvbg\" rel=\"noopener\">Litmus</a>, Gojek’s in-house experimentation platform. Since we built it, the adoption of Litmus across Gojek teams has been steadily increasing. More experiments are executed and more clients (in this case, Gojek teams) are integrated.</p><p>Besides this, another requirement is to integrate Litmus with other backend services directly, instead of solely with the mobile app. However, various client backend services have their own SLA and most of them are linked to latency. So, in order to client requirements, we have to reduce Litmus latency as much as possible.</p><p>In this post, we talk about our thought process behind delivering an initial sidecar design to achieve this goal,</p><h3 id=\"know-your-enemies\">Know your enemies</h3><p>First thing first, we needed to figure out where the bottleneck was. After digging through some data, it turned out 30% of total time in a Litmus API call was dominated by database call, and the number of database calls is ~2000 qps.</p><p>Based on this fact, we decided to use cache. Now, we obviously could not use an external cache like Redis or Memcached. If we used those, we would be adding an additional call. 😑</p><p>Instead, we decided to use in-memory cache. Since Litmus was written in Clojure, we went with <a href=\"https://github.com/ben-manes/caffeine\" rel=\"noopener\">caffeine cache</a>, which is good enough to be used in JVM. We implemented the in-memory cache and the database calls dropped from ~2000 qps to ~10 qps. The API latency also dropped around 10%.</p><h3 id=\"good-but-not-good-enough-we-needed-more-\">Good, but Not Good Enough. We Needed More.</h3><p>The implementation of in-memory cache and further tinkering with Litmus processes would not be enough on their own. Our next approach was to reduce the hops between client and Litmus servers.</p><p><strong><strong>How? By moving Litmus server so it is geographically closer to the client?</strong></strong></p><blockquote>Nah, we can do one better.</blockquote><p>We pulled our Litmus server as close as possible to the backend service client. To achieve this, we used <strong><strong>sidecar pattern</strong></strong>. We created a Litmus sidecar that resides in the same box as the backend service client. A Litmus sidecar can be seen as a mini version of the Litmus server that specifically serves the dedicated backend service client in the same box (VM).</p><h3 id=\"tweaking-the-nuts-and-bolts\">Tweaking the Nuts and Bolts</h3><p>To know how effective the sidecar pattern is, we need to know the base latency of Litmus server. We created 10 new active experiments specifically to get the base latency number. With 20 concurrency and 10 request per second, the 99 percentile was 23.55 ms.</p><h3 id=\"need-faster-api-calls-use-grpc\">Need faster API calls? Use gRPC</h3><p>We used gRPC over REST wherever we could in our Litmus sidecar. gRPC also has various features such as push/pull streaming and client-side load balancing that can be utilised for further enhancement. It’s fun stuff! 😁</p><h3 id=\"how-do-we-maintain-our-sidecar-without-permission-to-maintain-the-backend-service-client-box\">How do we maintain our sidecar without permission to maintain the backend service client box?</h3><p>In Gojek, each team can only have permission to access its own components/boxes. It is not possible (or scalable) to access all our backend service client boxes.</p><p>We could have considered this if we had only two or three clients. However, when you’re building for an organisation of Gojek’s scale with the hope of having all teams adopt Litmus in their services, we couldn’t go down this route.</p><p>On the other hand, we still needed the ability to check the health of Litmus sidecars in every backend service client and develop a sidecar app that complies with several <a href=\"https://12factor.net/\" rel=\"noopener\">12 factor apps</a> criteria (treat logs as event streams and store config in the environment).</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/05/1_DpUpHDHGgk3d_jXEJYgD-w.png\" class=\"kg-image\"><figcaption><a href=\"https://d33wubrfki0l68.cloudfront.net/24c41d54613afb774bff0a383043f8a47f4d0fd7/a14fb/static/img/consul-services.png\">Source</a></figcaption></figure><p>We decided to use Consul for <a href=\"https://www.consul.io/discovery.html\" rel=\"noopener\">service discovery</a> and <a href=\"https://www.consul.io/docs/agent/kv.html\" rel=\"noopener\">key-value config</a>. In addition being easy to use and having a nice dashboard UI, Consul service discovery also supports health checks.</p><p>After we set up the infra (Consul server, agent, etc), we just needed to add our service definition config along with our litmus sidecar to the backend service client box. For the Consul KV itself, Consul supports hot reloading, which means we don’t need to restart clients’ litmus sidecar if there are config changes.</p><p>However, we needed to handle the logic of hot reloading in the litmus sidecar app by ourself. For the logging part, Gojek already has a logging tools called <a href=\"https://blog.gojekengineering.com/how-we-built-barito-to-enhance-logging-19f80b89496f\" rel=\"noopener\">Barito</a> that forwards the system logs so that we don’t have to access client boxes with ssh.</p><p>Here is the high-level architecture of how litmus sidecar integrates with client backend services. Instead of pointing to Litmus server address, now backend service clients only need to point to its localhost with Litmus sidecar port.</p><figure class=\"kg-card kg-image-card kg-width-wide kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/05/1_nlCPCXxdSLGuXKvrjjBdfA.png\" class=\"kg-image\"><figcaption>Litmus sidecar in the same box as client backend service</figcaption></figure><h3 id=\"how-is-the-data-distributed\">How is the data distributed?</h3><p>As an agent of Litmus server that resides on the same box as the client, Litmus sidecar needs to have access to the same data as Litmus server.</p><blockquote><em><em>This was something we discussed long and hard. The trade off between speed and data consistency, the trade off between consistency and availability, and so on.</em></em></blockquote><p>As our purpose was to reduce latency, speed became our first class citizen. At least for now, it is okay for us to have eventually consistent data in our Litmus sidecar. We also decided to persist the data in the client box. We don’t store all Litmus server data, only what the client needs.</p><p>We wanted our Litmus sidecar as light as possible, so it does not disturb the main process in the box. Instead of using some SQL database, we decided to use KV store BadgerDB for persistence storage.</p><h3 id=\"how-to-synchronise-data-between-litmus-sidecar-and-server\">How to synchronise data between Litmus sidecar and server?</h3><p>We came up with several ideas around this, but decided to use the simplest one for our initial design. Litmus sidecar pulls the data that it needs periodically and persists it with BadgerDB.</p><h3 id=\"alrighty-then-let-s-measure-how-good-our-sidecar-is\">Alrighty then, let’s measure how good our sidecar is</h3><p>Using the same setup as we did in measuring base latency, the 99 percentile latency dropped to 6.91 ms. ✌</p><p>New clients are now integrating with sidecar, but we didn’t stop there. We are continuously optimising our Litmus sidecar app, and you can read more about our efforts in this <a href=\"http://bit.ly/2LQb6a3\" rel=\"noopener\">post</a>.</p><p>So, that was the thought process behind building sidecar to reduce latency. We believe there is still room for improvement, and would love to hear your thoughts in the comments.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/05/1_Yigf1nGxRKjzV7vIC_YkYg-1.png\" class=\"kg-image\"></figure><p>Want our stories sent straight to your inbox? <a href=\"https://mailchi.mp/go-jek/gojek-tech-newsletter\" rel=\"noopener\">Sign up for our newsletter!</a></p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/05/1_XSAkmYAomyHp6_18rjjAfA-1.jpeg\" class=\"kg-image\"><figcaption><a href=\"http://bit.ly/2KslIe4\">gojek.jobs</a></figcaption></figure>","url":"https://gojek-ghost.zysk.in/reducing-latency-with-sidecar/","canonical_url":null,"uuid":"fad08e62-a341-4366-b20c-ae2c5c5f487d","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ecb637d7aa22c4066f83f36","reading_time":5},"tags":{"edges":[{"node":{"name":"Culture","slug":"culture"}},{"node":{"name":"Data","slug":"data"}},{"node":{"name":"Design","slug":"design"}},{"node":{"name":"News","slug":"news"}},{"node":{"name":"Stories","slug":"stories"}},{"node":{"name":"Tech","slug":"tech"}},{"node":{"name":"Funding","slug":"funding"}},{"node":{"name":"Gojek","slug":"gojek"}},{"node":{"name":"Program Management","slug":"program-management"}},{"node":{"name":"Project Management","slug":"project-management"}},{"node":{"name":"Scrum","slug":"scrum"}},{"node":{"name":"Startup","slug":"startup"}}]},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5eda1a7a7aa22c4066f8408a","title":"How we rebuilt our order flow to satiate hungry GoFood customers","slug":"gofood-order-flow","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/06/GOFOOD-flow-01.jpg","excerpt":"Architecting the ordering flow evolution of Southeast Asia's largest food delivery app.","custom_excerpt":"Architecting the ordering flow evolution of Southeast Asia's largest food delivery app.","visibility":"public","created_at_pretty":"05 June, 2020","published_at_pretty":"05 June, 2020","updated_at_pretty":"05 June, 2020","created_at":"2020-06-05T15:42:10.000+05:30","published_at":"2020-06-05T15:53:11.000+05:30","updated_at":"2020-06-05T15:53:11.000+05:30","meta_title":"How we rebuilt our order flow to satiate hungry GoFood customers","meta_description":"Architecting the ordering flow evolution of Southeast Asia's largest food delivery app.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Megha Goyal","slug":"megha","bio":null,"profile_image":"https://gojek-ghost.zysk.in/content/images/2020/06/7RZBxUAn_400x400.jpg","twitter":"@goyalmegha94","facebook":"goyalmegha94/","website":"http://www.megha-goyal.com"}],"primary_author":{"name":"Megha Goyal","slug":"megha","bio":null,"profile_image":"https://gojek-ghost.zysk.in/content/images/2020/06/7RZBxUAn_400x400.jpg","twitter":"@goyalmegha94","facebook":"goyalmegha94/","website":"http://www.megha-goyal.com"},"primary_tag":{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"When GoFood started out back in 2015, our promise was simple: Tell us what you\nwant to eat, and we’ll deliver it to you. As we spread out from Jakarta,\nsatiating the hunger of millions of customers in most parts of Indonesia, GoFood\nas a product got increasingly complicated. Orders started to pile up, and we\nwere struggling to keep up with the skyrocketing demand. If we wanted to keep up\nwith users’ expectations, a few things needed to be done. We had to change, and\nsimultaneously up our game.\n\nIt’s a VUCA world, and we often remind ourselves that not a lot of things are\nconstant. We’ve been working hard to reimagine, re-engineer and redesign the\nGoFood flow which hasn’t been altered too much for many years.\n\nTo help you understand how it all started, let’s take you back in time a little\nbit…\n\nWhen the Gojek app for ride-hailing was launched in early 2015, we noticed there\nwere times when our driver partners had lean work periods. To provide additional\nmeans to help them make use of this time and earn more, GoSend (to send\ncouriers) and GoShop (to buy anything) were launched as auxiliary services.\n\n> We noticed that majority of orders placed in GoShop were for food. This gave way\nto GoFood, our dedicated food delivery product, launched in mid-2015.\nPhase 1: Listing Model\nGoFood started as a concierge model, where we had no tie-ups with restaurants. A\nSalesforce was deployed to list as many restaurant menus as possible on our\nplatform. When a customer placed an order, it would be assigned to one of our\ndriver partners, who would then go and place the order at the restaurant. The\ndriver partner would wait around, and when the order was ready, pay in cash,\npickup the order and deliver it to the customer.\n\nTedious? Yes. Scalable? No. 🤷‍\n\n\nPhase 2: Partnering With Merchants\nTo arrive at a scalable solution, we realised we had to take the restaurant\nmerchants along with us in this journey and welcome them into our ecosystem. We\nstarted partnering with the merchants, who were known as ‘GoFood Partners’.\n\n> This not only helped our merchants grow their businesses, but also got ample\nvisibility boost on GoFood.\nEven after onboarding them into our ecosystem, a large part of the process was\nmanual. It was far from ideal because there was no record of transactions\nbesides a booking on GoFood and a receipt handed to the driver partner.\n\nOften there were discrepancies in the number of orders assigned and the number\nof orders completed. How, you ask?\n\nImagine a GoFood partner who is part of a large chain of restaurants. When\nsomeone orders food from this chain, GoFood assigns this order to one outlet.\nHowever, the driver partner may decide to visit another outlet and pick up the\norder, as per convenience.\n\nThere were more problems galore.\n\nIf a merchant partner was not open for business on a particular day, and wanted\nto update their menu, or indicate items as out of stock, they had to call the\nGojek Customer Care. During this time, orders would still be coming in, which\nresulted in driver partners accepting orders that most certainly couldn’t be\ncompleted without a hassle.\n\nThere was a lot that needed fixing here, and it could only be done by\nintegrating merchants more deeply into our ecosystem. So, that’s exactly what we\ndid.\n\nPhase 3: The merchant app, GoResto\nTowards the end of 2016, a concept was developed for an app that would cater to\nmerchant partners, and by early 2017 GoResto (which is what we called it at the\ntime) was ready.\n\nWe introduced the following in GoResto:\n\n1. Electronic payments\nAll of Gojek’s driver partners had GoPay e-wallets associated with their\naccounts. With GoResto, we did the same for our GoFood partners. Transactions\nbetween driver and GoFood partners was directly wallet-to-wallet, hence,\ncashless.\n\n2. PIN exchange for restaurant verification\nTo ensure the order is secured, driver partners would also need to share a PIN\nwith the merchant while picking up the order. This electronic handshake helped\nus verify they were indeed picking up the right order from the right outlet.\n\n3. Catalog management\nWe noticed a lot of cancellations were happening because the items were either\nout of stock, restaurants were closed or customers were generally skeptical\nabout ordering dishes that didn’t have enough reference images. So, we started\nfocussing more on improving the product experience for our customers and BCR\n(booking completion rate). Catalog management was introduced so that the\nmerchants could regularly update details that customers saw on GoFood. For\nexample: Availability status of dishes that were put on the menu, uploading\ndetails pertaining to different items sold, etc.\n\nIn the meanwhile, GoResto was rebranded to GoBiz. What started off as a product\nthat helped merchants to manage their food orders, started evolving into\nsomething bigger. Since the scope extended beyond GoFood, calling it ‘GoResto’\nmade no sense.\n\nThe rebranding came with enhanced features in GoBiz. As you might’ve guessed, it\nalso came with new, enhanced problems and a sub-optimal flow:\n\n⚠️ The driver partner was ready, but the food wasn’t\n> The average time taken for a driver partner was:\n~9 minutes to pick up an order\n~19 minutes to deliver the order\nA portion of this time was spent by the driver waiting for the food to be\nprepared, because in most cases, GoFood partners started preparing food only\nafter the driver arrived! This was mostly because customer would add more food\nitems or the ordered items would be out of stock. We figured that the driver\narrival time could be parallelised with the food prep time. This led to 2\nimportant things:\n\n * Overall delivery time for the customer could be reduced\n * Wait time for the driver could be utilised to fulfil other orders\n\n️️️⚠️ GoFood Partner-driven cancellations existed, accountability didn’t\nGoFood partners had the ability to set their open hours and change item\navailability, but they didn’t always keep it updated. When cancellations\npertaining to these reasons happened, they were handled by…the driver partners.\n🤦‍♀️\nThis meant, the orders had to be cancelled either by the driver partners or the\ncustomers themselves.\n\n> Items being out of stock or restaurants being closed accounted for over 35% of\nall customer cancellations after a driver was assigned.\nOn the driver side, these accounted for over 75% of all driver cancellations. 😓\n⚠️ Price edits became pricey\nIn this order flow, the driver placed the final order with the merchant. This\nessentially means that the original order placed by the customer could be\nmodified due to various reasons: Incorrect listing of price, unavailability of\nitems, adding new items to the order, etc. To accommodate these cases, drivers\nwere allowed to input to final price of the order, leading to a price edit.\n\nAnd price edits aren’t uncommon. They happen to ~34% of the orders.\n\nMultiple moving pieces exposed these orders to skip payments or consumer wallet\nsweeps.\n\nPhase 4: Introducing Merchant Acceptance Flow\nDue to various reasons, our driver partners were handling GoFood partner-driven\ncancellations and heavy-lifting to ensure the orders were fulfilled. This, too,\nhad to change.\n\nAfter brainstorming, mind-mapping and head-scratching, we arrived at Merchant\nAccept Flow (MAF). The merchants who are onboarded to MAF are called Super\nPartners. The solution lets our Super Partners accept/reject orders based on the\nrestaurant being open, availability of items, or any other factors that\ndetermine order fulfilment or cancellation. This in turn helps our customers and\ndriver partners know that the merchant is preparing food for sure, so that there\nare no customer or driver cancellations.\n\nIn Part-2 of this blog, we’ll dive deep into Merchant Acceptance Flow, how we\nwent about designing it and introducing Super Partners to our customers. Stay\ntuned!\n\nIf you’re liking our stories and want them delivered straight to your inbox, \nsign up for our newsletter [https://mailchi.mp/go-jek/gojek-tech-newsletter]!","html":"<p>When GoFood started out back in 2015, our promise was simple: Tell us what you want to eat, and we’ll deliver it to you. As we spread out from Jakarta, satiating the hunger of millions of customers in most parts of Indonesia, GoFood as a product got increasingly complicated. Orders started to pile up, and we were struggling to keep up with the skyrocketing demand. If we wanted to keep up with users’ expectations, a few things needed to be done. We had to change, and simultaneously up our game.</p><p>It’s a VUCA world, and we often remind ourselves that not a lot of things are constant. We’ve been working hard to reimagine, re-engineer and redesign the GoFood flow which hasn’t been altered too much for many years.</p><p>To help you understand how it all started, let’s take you back in time a little bit…</p><p>When the Gojek app for ride-hailing was launched in early 2015, we noticed there were times when our driver partners had lean work periods. To provide additional means to help them make use of this time and earn more, GoSend (to send couriers) and GoShop (to buy anything) were launched as auxiliary services.</p><blockquote>We noticed that majority of orders placed in GoShop were for food. This gave way to GoFood, our dedicated food delivery product, launched in mid-2015.</blockquote><h3 id=\"phase-1-listing-model\">Phase 1: Listing Model</h3><p>GoFood started as a concierge model, where we had no tie-ups with restaurants. A Salesforce was deployed to list as many restaurant menus as possible on our platform. When a customer placed an order, it would be assigned to one of our driver partners, who would then go and place the order at the restaurant. The driver partner would wait around, and when the order was ready, pay in cash, pickup the order and deliver it to the customer.</p><h3 id=\"tedious-yes-scalable-no-\"><em>Tedious? Yes. Scalable? No. 🤷‍</em></h3><p></p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-16.png\" class=\"kg-image\"></figure><h3 id=\"phase-2-partnering-with-merchants\">Phase 2: Partnering With Merchants</h3><p>To arrive at a scalable solution, we realised we had to take the restaurant merchants along with us in this journey and welcome them into our ecosystem. We started partnering with the merchants, who were known as ‘<strong><em>GoFood Partners</em></strong>’.</p><blockquote>This not only helped our merchants grow their businesses, but also got ample visibility boost on GoFood.</blockquote><p>Even after onboarding them into our ecosystem, a large part of the process was manual. It was far from ideal because there was no record of transactions besides a booking on GoFood and a receipt handed to the driver partner.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-17.png\" class=\"kg-image\"></figure><p>Often there were discrepancies in the number of orders assigned and the number of orders completed. How, you ask?</p><p>Imagine a GoFood partner who is part of a large chain of restaurants. When someone orders food from this chain, GoFood assigns this order to one outlet. However, the driver partner may decide to visit another outlet and pick up the order, as per convenience.</p><h3 id=\"there-were-more-problems-galore-\"><em>There were more problems galore.</em><br></h3><p>If a merchant partner was not open for business on a particular day, and wanted to update their menu, or indicate items as out of stock, they had to call the Gojek Customer Care. During this time, orders would still be coming in, which resulted in driver partners accepting orders that most certainly couldn’t be completed without a hassle.</p><p>There was a lot that needed fixing here, and it could only be done by integrating merchants more deeply into our ecosystem. So, that’s exactly what we did.</p><h3 id=\"phase-3-the-merchant-app-goresto\">Phase 3: The merchant app, GoResto</h3><p>Towards the end of 2016, a concept was developed for an app that would cater to merchant partners, and by early 2017 GoResto (which is what we called it at the time) was ready.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-18.png\" class=\"kg-image\"></figure><p>We introduced the following in GoResto:</p><h4 id=\"1-electronic-payments\">1. Electronic payments</h4><p>All of Gojek’s driver partners had GoPay e-wallets associated with their accounts. With GoResto, we did the same for our GoFood partners. Transactions between driver and GoFood partners was directly wallet-to-wallet, hence, cashless.</p><h4 id=\"2-pin-exchange-for-restaurant-verification\">2. PIN exchange for restaurant verification</h4><p>To ensure the order is secured, driver partners would also need to share a PIN with the merchant while picking up the order. This electronic handshake helped us verify they were indeed picking up the right order from the right outlet.</p><h4 id=\"3-catalog-management\">3. Catalog management</h4><p>We noticed a lot of cancellations were happening because the items were either out of stock, restaurants were closed or customers were generally skeptical about ordering dishes that didn’t have enough reference images. So, we started focussing more on improving the product experience for our customers and BCR (booking completion rate). Catalog management was introduced so that the merchants could regularly update details that customers saw on GoFood. For example: Availability status of dishes that were put on the menu, uploading details pertaining to different items sold, etc.</p><p>In the meanwhile, GoResto was rebranded to GoBiz. What started off as a product that helped merchants to manage their food orders, started evolving into something bigger. Since the scope extended beyond GoFood, calling it ‘GoResto’ made no sense.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn-images-1.medium.com/max/800/1*UTfTFeb5u4dc8PbMRnyYtA.jpeg\" class=\"kg-image\"></figure><p>The rebranding came with enhanced features in GoBiz. As you might’ve guessed, it also came with new, enhanced problems and a sub-optimal flow:</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://cdn-images-1.medium.com/max/1200/1*7ZHFNcogEuyAGZ86zomAuw.jpeg\" class=\"kg-image\"></figure><h4 id=\"-the-driver-partner-was-ready-but-the-food-wasn-t\">⚠️ The driver partner was ready, but the food wasn’t</h4><blockquote>The average time taken for a driver partner was:<br>~9 minutes to pick up an order<br>~19 minutes to deliver the order</blockquote><p>A portion of this time was spent by the driver waiting for the food to be prepared, because in most cases, GoFood partners started preparing food only after the driver arrived! This was mostly because customer would add more food items or the ordered items would be out of stock. We figured that the driver arrival time could be parallelised with the food prep time. This led to 2 important things:</p><ul><li>Overall delivery time for the customer could be reduced</li><li>Wait time for the driver could be utilised to fulfil other orders</li></ul><h4 id=\"-gofood-partner-driven-cancellations-existed-accountability-didn-t\">️️️⚠️ GoFood Partner-driven cancellations existed, accountability didn’t</h4><p>GoFood partners had the ability to set their open hours and change item availability, but they didn’t always keep it updated. When cancellations pertaining to these reasons happened, they were handled by…the driver partners. 🤦‍♀️<br>This meant, the orders had to be cancelled either by the driver partners or the customers themselves.</p><blockquote>Items being out of stock or restaurants being closed accounted for over 35% of all customer cancellations after a driver was assigned.<br>On the driver side, these accounted for over 75% of all driver cancellations. 😓</blockquote><h4 id=\"-price-edits-became-pricey\">⚠️ Price edits became pricey</h4><p>In this order flow, the driver placed the final order with the merchant. This essentially means that the original order placed by the customer could be modified due to various reasons: Incorrect listing of price, unavailability of items, adding new items to the order, etc. To accommodate these cases, drivers were allowed to input to final price of the order, leading to a price edit.</p><h3 id=\"and-price-edits-aren-t-uncommon-they-happen-to-34-of-the-orders-\"><em>And price edits aren’t uncommon. They happen to ~34% of the orders.</em></h3><p><br>Multiple moving pieces exposed these orders to skip payments or consumer wallet sweeps.</p><h3 id=\"phase-4-introducing-merchant-acceptance-flow\">Phase 4: Introducing Merchant Acceptance Flow</h3><p>Due to various reasons, our driver partners were handling GoFood partner-driven cancellations and heavy-lifting to ensure the orders were fulfilled. This, too, had to change.</p><p>After brainstorming, mind-mapping and head-scratching, we arrived at Merchant Accept Flow (MAF). The merchants who are onboarded to MAF are called Super Partners. The solution lets our Super Partners accept/reject orders based on the restaurant being open, availability of items, or any other factors that determine order fulfilment or cancellation. This in turn helps our customers and driver partners know that the merchant is preparing food for sure, so that there are no customer or driver cancellations.</p><figure class=\"kg-card kg-image-card kg-width-wide\"><img src=\"https://cdn-images-1.medium.com/max/1200/1*5FbUDwJLqdnyjJIPwbaOYQ.jpeg\" class=\"kg-image\"></figure><p>In Part-2 of this blog, we’ll dive deep into Merchant Acceptance Flow, how we went about designing it and introducing Super Partners to our customers. Stay tuned!</p><figure class=\"kg-card kg-image-card\"><img src=\"https://cdn-images-1.medium.com/max/800/1*IPWwoozDxeKoXMtXEyrtLw.png\" class=\"kg-image\"></figure><p>If you’re liking our stories and want them delivered straight to your inbox, <a href=\"https://mailchi.mp/go-jek/gojek-tech-newsletter\" rel=\"noopener\">sign up for our newsletter</a>!</p>","url":"https://gojek-ghost.zysk.in/gofood-order-flow/","canonical_url":null,"uuid":"11cd52b3-1e42-4e42-b636-5889943d328f","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eda1a7a7aa22c4066f8408a","reading_time":6}},{"node":{"id":"Ghost__Post__5ed9f3e47aa22c4066f8405b","title":"Helping our Helpers with GoModal","slug":"helping-our-helpers-with-gomodal","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/06/GoModal-1.gif","excerpt":"The story of how we built a product to help our merchant partners power through short-term capital needs.","custom_excerpt":"The story of how we built a product to help our merchant partners power through short-term capital needs.","visibility":"public","created_at_pretty":"05 June, 2020","published_at_pretty":"05 June, 2020","updated_at_pretty":"05 June, 2020","created_at":"2020-06-05T12:57:32.000+05:30","published_at":"2020-06-05T13:05:38.000+05:30","updated_at":"2020-06-05T13:05:38.000+05:30","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Startup","slug":"startup","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Gojek","slug":"gojek","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Amalia runs a small salad shop in Jakarta — the kind that serves creamy\nconcoctions topped with freshly cut fruits. Strawberries are one of her most\npopular toppings.\n\n> Recently, she decided not to buy strawberries. The prices were too high and she\ncouldn’t afford them anymore.\nAs the operator of GoFood, one of the largest food delivery services in the\nworld, the wellbeing of merchant partners is paramount to us at Gojek. Many of\nour 400,000 partners, like Amalia, routinely encounter financial bottlenecks due\nto unexpected expenses or improper revenue management.\n\nFor a significant percentage of partners, bookkeeping is still a foreign\nconcept, with the order info provided by GoFood serving as their main marker for\nsales and revenue. They tend to go with the flow of the business, not planning\non scaling up or battening the hatches for a rainy day.\n\n> As another merchant partner puts it, “I never think much about money, I just\nleave it to the Almighty.”\nThe health of our business is only as good as the health of the businesses we\nwork with. So we embarked on a journey to help merchants with their capital woes\nby building a new financial service product.\n\nThis is how we built GoModal.\n\nTrials and tribulations\nWhen the going gets tough, merchant partners usually have three options: borrow\nfrom a relative, approach a bank, or cut down on living expenses.\n\nIn Indonesia, the idea of taking a pinjaman (loan) is still frowned upon. Even\nif the capital requirement is to help tide over a temporary crisis or business\nexpansion, merchants are hesitant to approach family for this reason. As many do\nnot possess solid credit scores, traditional bank loans are difficult to come by\nas well. This led to many partners pulling from savings and cutting down on\nexpenses — forgoing even daily essentials to keep business going.\n\nThis wasn’t an experience we wanted our partners to have. Something had to be\ndone.\n\nGojek’s first attempt to solve this involved a tie-up with one of Indonesia’s\nlargest banks to offer our merchant partners subsidised business credit. While\nwe had the right idea, we had not solved the underlying issues — partners would\nrarely pass the stringent disbursal criteria of a commercial bank, and disbursal\ntimelines would not suit their need for immediate capital.\n\n> In bad times, rapid capital infusion could make the difference between a\nbusiness sinking or floating.\nWe decided to try a different approach.\n\nWe’re in this together\nIn late 2018, we began offering working capital loans to our merchant partners.\nBy the next year, Gojek’s erstwhile merchant app, GoResto, had been overhauled\ninto GoBiz, a comprehensive Super App built to cater to all the needs of\nmerchant partners. In September 2019, we added our loan feature to GoBiz’s\nmerchant dashboard.\n\nWe called this Pinjaman Modal Usaha (PMU). In other words, a ‘venture capital\nloan’.\n\nAs the payments of partners who had signed up for GoBiz was processed by us, we\ncould figure out their revenues and repayment capacity ourselves. This put Gojek\nin the perfect position to offer working capital, made collections simple, and\nfurther reinforced the trust partners had in us.\n\nThe capital need was slowly being addressed. The latter half of 2019 saw us\ndisburse capital to over 4,500 merchants. 🙌\n\nBut one problem bothered us. We still weren’t fast enough.\n\nFrom pinjaman to modal\nWith PMU, Gojek had successfully addressed part of our partners’ capital woes.\nBut PMU still relied on a rudimentary form to collect applications, tracking via\nspreadsheets, and manual approval processes.\n\n> The first step was a small one, automating parts of the verification and\nprocessing.\n> Next, we built out a complete credit cycle.\n> Then, we got rid of the spreadsheets.\nWe now had a complete product that could figure out how much capital could be\ngiven to which merchant, process applications almost instantly, and systems that\ncould handle disbursal and recovery.\n\nAs the final cherry (or strawberry 😉) on top, we decided our improved product\ncould use an improved name. A Gojek name.\n\nRemember the negative connotation associated with the word pinjaman? We weren’t\ngiving our partners loans. We were giving them capital. Modal.\n\nAnd so was a new product born — GoModal.\n\nWhat does it do?\nNow that we had a product that could do everything we envisioned, it was time to\nget it out front and centre. Not a lot of merchants manually accessed the GoBiz\ndashboard, so in January 2020, we put GoModal in a place where we sure everyone\nwould see it.\n\nThe GoBiz app.\n\nUsing GoModal, eligible merchant partners can avail pre-approved working capital\nbetween Rp1.5m ($90) to Rp150m ($9,000) with repayment tenures ranging from 2 to\n12 months.\n\nRemember we mentioned we could now disburse capital faster?\n\n> Relying on a bank for capital leads to processing time of up to 6 weeks. With\nGoModal, we get money to the bank accounts of our partners in 13 hours. 💪\nSince our partners are now busy fighting fires and expanding business, we\nfigured it wasn’t fair to hassle them with big monthly repayments. As their\nearnings are processed by GoBiz, we deduct payments from their daily earnings up\nto 20 days a month, assuming they generated enough revenue.\n\nGoFood is built by the grit and ingenuity of our partner merchants, and running\na business is hard enough without having to constantly worry about capital.\nThat’s why we went on the journey to build GoModal.\n\nSo people like Amalia never have to worry about buying strawberries again.\n\nWant more of content like this? Sign up for our newsletter\n[https://mailchi.mp/go-jek/gojek-tech-newsletter]!","html":"<p>Amalia runs a small salad shop in Jakarta — the kind that serves creamy concoctions topped with freshly cut fruits. Strawberries are one of her most popular toppings.</p><blockquote><em><em>Recently, she decided not to buy strawberries. The prices were too high and she couldn’t afford them anymore.</em></em></blockquote><p>As the operator of GoFood, one of the largest food delivery services in the world, the wellbeing of merchant partners is paramount to us at Gojek. Many of our 400,000 partners, like Amalia, routinely encounter financial bottlenecks due to unexpected expenses or improper revenue management.</p><p>For a significant percentage of partners, bookkeeping is still a foreign concept, with the order info provided by GoFood serving as their main marker for sales and revenue. They tend to go with the flow of the business, not planning on scaling up or battening the hatches for a rainy day.</p><blockquote><em><em>As another merchant partner puts it, “I never think much about money, I just leave it to the Almighty.”</em></em></blockquote><p>The health of our business is only as good as the health of the businesses we work with. So we embarked on a journey to help merchants with their capital woes by building a new financial service product.</p><p>This is how we built GoModal.</p><h3 id=\"trials-and-tribulations\">Trials and tribulations</h3><p>When the going gets tough, merchant partners usually have three options: borrow from a relative, approach a bank, or cut down on living expenses.</p><p>In Indonesia, the idea of taking a <em><em>pinjaman</em></em> (loan) is still frowned upon. Even if the capital requirement is to help tide over a temporary crisis or business expansion, merchants are hesitant to approach family for this reason. As many do not possess solid credit scores, traditional bank loans are difficult to come by as well. This led to many partners pulling from savings and cutting down on expenses — forgoing even daily essentials to keep business going.</p><p><strong><strong>This wasn’t an experience we wanted our partners to have. Something had to be done.</strong></strong></p><p>Gojek’s first attempt to solve this involved a tie-up with one of Indonesia’s largest banks to offer our merchant partners subsidised business credit. While we had the right idea, we had not solved the underlying issues — partners would rarely pass the stringent disbursal criteria of a commercial bank, and disbursal timelines would not suit their need for immediate capital.</p><blockquote><em><em>In bad times, rapid capital infusion could make the difference between a business sinking or floating.</em></em></blockquote><p>We decided to try a different approach.</p><h3 id=\"we-re-in-this-together\">We’re in this together</h3><p>In late 2018, we began offering working capital loans to our merchant partners. By the next year, Gojek’s erstwhile merchant app, GoResto, had been overhauled into GoBiz, a comprehensive Super App built to cater to all the needs of merchant partners. In September 2019, we added our loan feature to GoBiz’s merchant dashboard.</p><p>We called this <em><em>Pinjaman Modal Usaha</em></em> (PMU). In other words, a ‘venture capital loan’.</p><p>As the payments of partners who had signed up for GoBiz was processed by us, we could figure out their revenues and repayment capacity ourselves. This put Gojek in the perfect position to offer working capital, made collections simple, and further reinforced the trust partners had in us.</p><p>The capital need was slowly being addressed. The latter half of 2019 saw us disburse capital to over 4,500 merchants. 🙌</p><p><em><em>But one problem bothered us. We still weren’t fast enough.</em></em></p><h3 id=\"from-pinjaman-to-modal\">From pinjaman to modal</h3><p>With PMU, Gojek had successfully addressed part of our partners’ capital woes. But PMU still relied on a rudimentary form to collect applications, tracking via spreadsheets, and manual approval processes.</p><blockquote><em><em>The first step was a small one, automating parts of the verification and processing.</em></em></blockquote><blockquote><em><em>Next, we built out a complete credit cycle.</em></em></blockquote><blockquote><em><em>Then, we got rid of the spreadsheets.</em></em></blockquote><p>We now had a complete product that could figure out how much capital could be given to which merchant, process applications almost instantly, and systems that could handle disbursal and recovery.</p><p>As the final cherry (or strawberry 😉) on top, we decided our improved product could use an improved name. A Gojek name.</p><p>Remember the negative connotation associated with the word <em><em>pinjaman</em></em>? We weren’t giving our partners <em><em>loans</em></em>. We were giving them <em><em>capital</em></em>. <strong><strong>Modal</strong></strong>.</p><p>And so was a new product born — GoModal.</p><h3 id=\"what-does-it-do\">What does it do?</h3><p>Now that we had a product that could do everything we envisioned, it was time to get it out front and centre. Not a lot of merchants manually accessed the GoBiz dashboard, so in January 2020, we put GoModal in a place where we sure everyone would see it.</p><p><strong><strong>The GoBiz app.</strong></strong></p><p>Using GoModal, eligible merchant partners can avail pre-approved working capital between Rp1.5m ($90) to Rp150m ($9,000) with repayment tenures ranging from 2 to 12 months.</p><p>Remember we mentioned we could now disburse capital faster?</p><blockquote>Relying on a bank for capital leads to processing time of up to 6 weeks. With GoModal, we get money to the bank accounts of our partners in 13 hours. 💪</blockquote><p>Since our partners are now busy fighting fires and expanding business, we figured it wasn’t fair to hassle them with big monthly repayments. As their earnings are processed by GoBiz, we deduct payments from their daily earnings up to 20 days a month, assuming they generated enough revenue.</p><p>GoFood is built by the grit and ingenuity of our partner merchants, and running a business is hard enough without having to constantly worry about capital. That’s why we went on the journey to build GoModal.</p><p>So people like Amalia never have to worry about buying strawberries again.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-15.png\" class=\"kg-image\"></figure><p>Want more of content like this? <a href=\"https://mailchi.mp/go-jek/gojek-tech-newsletter\" rel=\"noopener\">Sign up for our newsletter</a>!</p>","url":"https://gojek-ghost.zysk.in/helping-our-helpers-with-gomodal/","canonical_url":null,"uuid":"c9b06805-5e63-4c53-acc9-6fe01ed0a349","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ed9f3e47aa22c4066f8405b","reading_time":4}},{"node":{"id":"Ghost__Post__5ed9e2717aa22c4066f83fe8","title":"The Process Behind Program Management","slug":"the-process-behind-program-management","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/06/ProcessProgramManagement.jpg","excerpt":"Using a Program Management and Agile approach to make deliverables skyrocket.","custom_excerpt":"Using a Program Management and Agile approach to make deliverables skyrocket.","visibility":"public","created_at_pretty":"05 June, 2020","published_at_pretty":"05 June, 2020","updated_at_pretty":"05 June, 2020","created_at":"2020-06-05T11:43:05.000+05:30","published_at":"2020-06-05T12:06:33.000+05:30","updated_at":"2020-06-05T13:07:06.000+05:30","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Tech","slug":"tech","description":"Learnings from technical challenges solved at Gojek, how-tos, and programming tips.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Gojek","slug":"gojek","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Program Management","slug":"program-management","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Project Management","slug":"project-management","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Scrum","slug":"scrum","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"We’ve often talked about how Gojek doesn’t build one Super App, it builds three.\nTo achieve this, multiple Product Development Groups (PDG) exist within Gojek.\nOne of these is the GoMerchants PDG, that handles all our merchant-centric\ninitiatives, including GoBiz, our SuperApp for merchant partners.\n\nGoMerchants is an entity formed by the fusion of multiple teams that all had\ntheir own work styles. How do such diverse people come together and build\namazing things? That’s where Program Management comes into the picture.\n\nThe Challenge\nGoMerchants PDG was formed from five separate teams (SPOTS, Midtrans, Mapan,\nGoResto, Nadipos), and each team had a unique engineering culture. Across teams,\nthe total number of staff involved in cross-functional work was ~240 people.\n\nAfter a discovery phase of the process over 3 months with the various groups, we\nfound that every team was utilising different versions of project management\nmethodology and tools to track team progress. Across various teams, we\nidentified nearly a dozen different types of tools and methods including the\nScrum method, Kanban method, Jira tools, Favro Tools, and Trello tools.\n\nThe key takeaway was clear: There was no single source of truth for tracking\nteam deployment progress.\n\nThe Solution\nTo achieve our goal of reaching a high rate of (quality) deliverables with clear\ntransparency on progress, the Program Managers decided to build a program that\nset a single standard workflow for everyone involved. The end result? A meld of\nAgile best practices and a limited/select set of tools.\n\nAt the highest level, Program Management methodology focuses on adding just \nenough processes to help with efficiency — and not creating convoluted processes\nfor the sake of process. Keeping these best practices in mind, the workflow\nbuilt by the GoMerchants Program Management team entailed Scrum Process to track\nbacklog priority, using Confluence as a documentation hub, Jira for managing\nbacklog tasks, Pre-Iteration Planning Meetings, Sprint Planning, Daily Standups,\nand lastly, conducting regular Retrospectives.\n\nThe consolidated approach helped the GoMerchants team reach the rapid pace\nneeded to hit targeting of deliverables— but also helped support the team in an\nenvironment of rapidly-changing requirements via greater transparency.\n\nThere were additional benefits to this approach, as well: Instantaneous feedback\nfrom the team on what was working (and what was not), metrics to inform future\niterations of the workflow, and a reduction in deployment failure — and rollback\ndeployment risk — thanks to rapid and continuous internal communication.\n\n> “Agile software development is an approach to software development under which\nrequirements and solutions evolve through the collaborative effort of\nself-organizing and cross-functional teams and their customer(s)/end user(s).” —\nCollier, Ken W. (2011). Agile Analytics: A Value-Driven Approach to Business\nIntelligence and Data Warehousing. Pearson Education.\nTo transform quality deployment with high pace targets, the program implemented\nfar better collaboration for a large team than previously existed.\n\nAt the same time, Jira was chosen as the one crucial tool for backlog management\nfor GoMerchants. The factors in selecting Jira were the platform functionality\nis highly-configurable to the specific requirements of a team, as well, as it\nhas the flexibility to allow for usage in a wide variety of environments and\nprocesses.\n\nScrum Activities\nBelow is the flow of scrum activity. It starts from Pre-Iteration Planning\nMeeting (Pre-IPM), Retrospective, IPM/Sprint Planning, and Daily Standup:\n\nSprints\nA Sprint is a time-box of iterations, where the releasable works that align with\nsprint goals are implemented. A Sprint always has a fixed start and end date —\nthese dates should be of the same duration; typically two weeks.\n\nSource: Essential Scrum: A Practical Guide to the Most Popular Agile Process\nSprints notes: While most of GoMerchants PDG uses two-week sprints, the length\nof time can depend on several factors like the final deadline, number of people\nin the team, and holidays in the calendar. Some teams use a one-week Sprint\ncycle due to urgent work that requires moving at an accelerated pace. But,\ngenerally it is not a best practice to use one-week sprint cycles as team\nachievement moments can be missed, quality could be sacrificed, and team\nburn-out is a real risk.\n\nPre-I.P.M. (Pre-Iteration Planning Meeting)\nPre-IPM is an activity to review the active Sprint and manage backlog and Sprint\ngoal(s) for the next iteration. Pre-IPM is attended by a Product Manager, Tech\nLeads, and Program Manager. The Product Manager should write-up the ‘story’ aka\nplan, in Jira after Pre-IPM. Tech lead should advise if the story and goals for\nthe next iteration are technically achievable.\n\nAs a Program Manager, you can use spreadsheets for mapping between the story and\nteam before doing the IPM. Below is the example:\n\nPre-IPM notes: This is basically a small meeting with a PM, TechLead, HoE/HoP\n(if necessary) and PgM. The purpose is to finalise the work backlog for the team\nin the upcoming Sprint. This meeting will help streamline the Sprint Planning\nmeeting by confirming that the final requirements have been aligned by all\nstakeholders — the goal being to reduce the number of “Requirement Changes”\ngoing forward. .\n\nRetrospective\nThe purpose of a retrospective in IPM is to collect previous sprint feedback\nfrom the team. It contains some columns like:\n\n * Glad: What makes you happy in this sprint or things that went well\n * Sad: What makes you sad in this sprint and from here we can see how we can\n   improve it\n * Mad: What makes you mad or frustrated in this sprint\n * Ideas: Idea to improve our next sprint\n * Appreciation: Appreciation in this sprint, esp if there’s a pretty big team\n   achievement\n * Action Item: Action item to improve our next sprint based on Sad, Mad, and\n   Ideas columns. This is the important part to be followed up so “lesson\n   learned” value from every sprint is really working\n\nWe can use several tools to help us collect data, i.e. https://funretro.io/,\nbelow is the example:\n\nSend a retrospective link to a Slack channel before IPM and encourage the team\nto fill the cards. Do the retrospective by talking through each column 15–30\nminutes before IPM starts.\n\nRetrospective notes: This session provides the opportunity for a team to look\nback and see how they can improve. Retrospectives can be a catalyst for\norganisational change, team change or even a culture change. The Retrospective\ncan be a place to build and enable teams, or to help teams start their journey\nwith a clear understanding of where to go next. It’s a method that is very\nuseful to gauge the Team Happiness state and gain Improvement Feedback from the\nteam. A Retrospective also builds trust and helps make the team grow stronger as\nindividual members know they have an outlet to express their feedback and they\nwill be heard by their managers and colleagues. Since this process is highly\nactionable, the PgM’s have incorporated it beyond the use case of small teams,\nand have instituted it at larger scale for the entire GoMerchants PDG Org every\n6 months.\n\nIPM/Sprint Planning\nIPM/Sprint Planning is an activity that is attended by all members of the team\nto prioritise the backlog, discuss stories, and determine story points.\n\nSource: http://www.informit.com/articles/article.aspx?p=1928232Below are the\nsteps taken in an IPM:\n\nBefore IPM:\n\n * Program Manager sends a retrospective link to a Slack channel\n\nDuring IPM:\n\n * Retrospective 15 min\n * Open Sprint Report to review active sprint (Done and Not Done)\n * Complete Sprint\n * Open velocity chart to review the commitment and complete stories from the\n   previous Sprint\n * Ask the team who will take a leave and discuss with PM about achievement\n   story (this will be helpful to adjust velocity for the next Sprint)\n * The PM explains each story for a new sprint. Make sure there’s always a DoD\n   and add story points\n * Add the Sprint Goal\n * Start Sprint\n * After IPM\n * Collect result of retrospective, make sure action items are done/started to\n   be worked on\n\nDaily Standup\nStand up Preparation:\n\n * Set a daily schedule (max 15 mins) and make sure the team is committed to\n   attend stand up\n * Remind the team to update Jira 10–30 mins before stand up\n\nDuring Stand up\n\n * Open Jira dashboard to review story update and movement.\n * Create a set of Standup Notes and copy it in the team Slack channel if\n   necessary\n * Ask these questions and record the answer to each member: What did I\n   accomplish since the last daily standup? What obstacles are impeding my\n   progress? What will I do by the next daily standup?\n * Daily Stand up notes: There are times people will forget to update Jira\n   ticket (it’s a never-ending challenge 💁). As a Program Manager, we need to\n   remind/ensure their team updates Jira (at least) right beforethe stand up\n   starts.\n\nThe Results\nWe’ll let them speak for themselves!\n\nH1 & H2 2019 resultAfter building a standard approach across teams using Agile,\nJira, and other tool sets, the Program Management approach used by the\nGoMerchants PgM team to combine these elements helped to vastly improve the\neffectiveness of team performance on 2019 period. That’s a win we’ll take. 🙌\n\nAre you liking our stories? Do you want them delivered straight to your inbox? \nSign up for our newsletter! [https://mailchi.mp/go-jek/gojek-tech-newsletter]","html":"<p>We’ve often talked about how Gojek doesn’t build one Super App, it builds three. To achieve this, multiple Product Development Groups (PDG) exist within Gojek. One of these is the GoMerchants PDG, that handles all our merchant-centric initiatives, including GoBiz, our SuperApp for merchant partners.</p><p>GoMerchants is an entity formed by the fusion of multiple teams that all had their own work styles. How do such diverse people come together and build amazing things? That’s where Program Management comes into the picture.</p><h3 id=\"the-challenge\">The Challenge</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*BOZMTMudwppvAHi6\" class=\"kg-image\"></figure><p>GoMerchants PDG was formed from five separate teams (SPOTS, Midtrans, Mapan, GoResto, Nadipos), and each team had a unique engineering culture. Across teams, the total number of staff involved in cross-functional work was ~240 people.</p><p>After a discovery phase of the process over 3 months with the various groups, we found that every team was utilising different versions of project management methodology and tools to track team progress. Across various teams, we identified nearly a dozen different types of tools and methods including the Scrum method, Kanban method, Jira tools, Favro Tools, and Trello tools.</p><p>The key takeaway was clear: There was no single source of truth for tracking team deployment progress.</p><h3 id=\"the-solution\">The Solution</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*xz0BID0wK762a3It\" class=\"kg-image\"></figure><p>To achieve our goal of reaching a high rate of (quality) deliverables with clear transparency on progress, the Program Managers decided to build a program that set a single standard workflow for everyone involved. The end result? A meld of Agile best practices and a limited/select set of tools.</p><p>At the highest level, Program Management methodology focuses on adding just<em><em> </em></em>enough processes to help with efficiency — and not creating convoluted processes for the sake of process. Keeping these best practices in mind, the workflow built by the GoMerchants Program Management team entailed Scrum Process to track backlog priority, using Confluence as a documentation hub, Jira for managing backlog tasks, Pre-Iteration Planning Meetings, Sprint Planning, Daily Standups, and lastly, conducting regular Retrospectives.</p><p>The consolidated approach helped the GoMerchants team reach the rapid pace needed to hit targeting of deliverables— but also helped support the team in an environment of rapidly-changing requirements via greater transparency.</p><p>There were additional benefits to this approach, as well: Instantaneous feedback from the team on what was working (and what was not), metrics to inform future iterations of the workflow, and a reduction in deployment failure — and rollback deployment risk — thanks to rapid and continuous internal communication.</p><blockquote><em><em>“Agile software development is an approach to software development under which requirements and solutions evolve through the collaborative effort of self-organizing and cross-functional teams and their customer(s)/end user(s).” — Collier, Ken W. (2011). Agile Analytics: A Value-Driven Approach to Business Intelligence and Data Warehousing. Pearson Education.</em></em></blockquote><p>To transform quality deployment with high pace targets, the program implemented far better collaboration for a large team than previously existed.</p><p>At the same time, Jira was chosen as the one crucial tool for backlog management for GoMerchants. The factors in selecting Jira were the platform functionality is highly-configurable to the specific requirements of a team, as well, as it has the flexibility to allow for usage in a wide variety of environments and processes.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*6BKaz05opZRwL9_K\" class=\"kg-image\"></figure><h3 id=\"scrum-activities\">Scrum Activities</h3><p>Below is the flow of scrum activity. It starts from Pre-Iteration Planning Meeting (Pre-IPM), Retrospective, IPM/Sprint Planning, and Daily Standup:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/538/0*gTaqBaLJp4SmH04h\" class=\"kg-image\"></figure><h3 id=\"sprints\">Sprints</h3><p>A Sprint is a time-box of iterations, where the releasable works that align with sprint goals are implemented. A Sprint always has a <strong><strong>fixed </strong></strong>start and end date — these dates should be of the same duration; typically two weeks.</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://miro.medium.com/max/1100/0*FW1FhCEHTQr-94pp\" class=\"kg-image\" alt=\"Source: Essential Scrum: A Practical Guide to the Most Popular Agile Process\"><figcaption><em>Source: Essential Scrum: A Practical Guide to the Most Popular Agile Process</em></figcaption></figure><p>Sprints notes: While most of GoMerchants PDG uses two-week sprints, the length of time can depend on several factors like the final deadline, number of people in the team, and holidays in the calendar. Some teams use a one-week Sprint cycle due to urgent work that requires moving at an accelerated pace. But, generally it is not a best practice to use one-week sprint cycles as team achievement moments can be missed, quality could be sacrificed, and team burn-out is a real risk.</p><h3 id=\"pre-i-p-m-pre-iteration-planning-meeting-\">Pre-I.P.M. (Pre-Iteration Planning Meeting)</h3><p>Pre-IPM is an activity to review the active Sprint and manage backlog and Sprint goal(s) for the next iteration. Pre-IPM is attended by a Product Manager, Tech Leads, and Program Manager. The Product Manager should write-up the ‘story’ aka plan, in Jira after Pre-IPM. Tech lead should advise if the story and goals for the next iteration are technically achievable.</p><p>As a Program Manager, you can use spreadsheets for mapping between the story and team before doing the IPM. Below is the example:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/739/0*nScsmP0TJmMn21oF\" class=\"kg-image\"></figure><p>Pre-IPM notes: This is basically a small meeting with a PM, TechLead, HoE/HoP (if necessary) and PgM. The purpose is to finalise the work backlog for the team in the upcoming Sprint. This meeting will help streamline the Sprint Planning meeting by confirming that the final requirements have been aligned by all stakeholders — the goal being to reduce the number of “Requirement Changes” going forward. .</p><h2 id=\"retrospective\"><strong>Retrospective</strong></h2><p>The purpose of a retrospective in IPM is to collect previous sprint feedback from the team. It contains some columns like:</p><ul><li><strong><strong>Glad</strong></strong>: What makes you happy in this sprint or things that went well</li><li><strong><strong>Sad</strong></strong>: What makes you sad in this sprint and from here we can see how we can improve it</li><li><strong><strong>Mad</strong></strong>: What makes you mad or frustrated in this sprint</li><li><strong><strong>Ideas</strong></strong>: Idea to improve our next sprint</li><li><strong><strong>Appreciation</strong></strong>: Appreciation in this sprint, esp if there’s a pretty big team achievement</li><li><strong><strong>Action Item</strong></strong>: Action item to improve our next sprint based on Sad, Mad, and Ideas columns. This is the important part to be followed up so “lesson learned” value from every sprint is really working</li></ul><p>We can use several tools to help us collect data, i.e. <a href=\"https://funretro.io/\" rel=\"noopener\">https://funretro.io/</a>, below is the example:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1400/0*tbPuQ0kjLePWqVsB\" class=\"kg-image\"></figure><p>Send a retrospective link to a Slack channel before IPM and encourage the team to fill the cards. Do the retrospective by talking through each column 15–30 minutes before IPM starts.</p><p>Retrospective notes: This session provides the opportunity for a team to look back and see how they can improve. Retrospectives can be a catalyst for organisational change, team change or even a culture change. The Retrospective can be a place to build and enable teams, or to help teams start their journey with a clear understanding of where to go next. It’s a method that is very useful to gauge the Team Happiness state and gain Improvement Feedback from the team. A Retrospective also builds trust and helps make the team grow stronger as individual members know they have an outlet to express their feedback and they will be heard by their managers and colleagues. Since this process is highly actionable, the PgM’s have incorporated it beyond the use case of small teams, and have instituted it at larger scale for the entire GoMerchants PDG Org every 6 months.</p><h3 id=\"ipm-sprint-planning\">IPM/Sprint Planning</h3><p>IPM/Sprint Planning is an activity that is attended by all members of the team to prioritise the backlog, discuss stories, and determine story points.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-7.png\" class=\"kg-image\"></figure><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-8.png\" class=\"kg-image\"><figcaption><em>Source: </em><a href=\"http://www.informit.com/articles/article.aspx?p=1928232\" rel=\"noopener\"><em>http://www.informit.com/articles/article.aspx?p=1928232</em></a></figcaption></figure><p>Below are the steps taken in an IPM:</p><p><strong><strong>Before IPM:</strong></strong></p><ul><li>Program Manager sends a retrospective link to a Slack channel</li></ul><p><strong><strong>During IPM:</strong></strong></p><ul><li>Retrospective 15 min</li><li>Open Sprint Report to review active sprint (Done and Not Done)</li><li>Complete Sprint</li><li>Open velocity chart to review the commitment and complete stories from the previous Sprint</li><li>Ask the team who will take a leave and discuss with PM about achievement story (this will be helpful to adjust velocity for the next Sprint)</li><li>The PM explains each story for a new sprint. Make sure there’s always a DoD and add story points</li><li>Add the Sprint Goal</li><li>Start Sprint</li><li>After IPM</li><li>Collect result of retrospective, make sure action items are done/started to be worked on</li></ul><h3 id=\"daily-standup\">Daily Standup</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-9.png\" class=\"kg-image\"></figure><p><strong><strong>Stand up Preparation:</strong></strong></p><ul><li>Set a daily schedule (max 15 mins) and make sure the team is <strong><strong>committed</strong></strong> to attend stand up</li><li>Remind the team to update Jira 10–30 mins before stand up</li></ul><p><strong><strong>During Stand up</strong></strong></p><ul><li>Open Jira dashboard to review story update and movement.</li><li>Create a set of Standup Notes and copy it in the team Slack channel if necessary</li><li>Ask these questions and record the answer to each member: <em><em>What did I accomplish since the last daily standup? What obstacles are impeding my progress? What will I do by the next daily standup?</em></em></li><li>Daily Stand up notes: There are times people will forget to update Jira ticket (it’s a never-ending challenge 💁). As a Program Manager, we need to remind/ensure their team updates Jira (at least) <strong><strong>right before</strong></strong>the stand up starts.</li></ul><h3 id=\"the-results\">The Results</h3><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-10.png\" class=\"kg-image\"></figure><p>We’ll let them speak for themselves!</p><figure class=\"kg-card kg-image-card kg-card-hascaption\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-13.png\" class=\"kg-image\"><figcaption>H1 &amp; H2 2019 result</figcaption></figure><p>After building a standard approach across teams using Agile, Jira, and other tool sets, the Program Management approach used by the GoMerchants PgM team to combine these elements helped to vastly improve the effectiveness of team performance on 2019 period. That’s a win we’ll take. 🙌</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/image-14.png\" class=\"kg-image\"></figure><p>Are you liking our stories? Do you want them delivered straight to your inbox? <a href=\"https://mailchi.mp/go-jek/gojek-tech-newsletter\" rel=\"noopener\">Sign up for our newsletter!</a></p><p></p><p></p>","url":"https://gojek-ghost.zysk.in/the-process-behind-program-management/","canonical_url":null,"uuid":"6ab38ee0-3e63-446e-ab05-9f3b29c811ad","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ed9e2717aa22c4066f83fe8","reading_time":7}},{"node":{"id":"Ghost__Post__5ed7600d7aa22c4066f83fc2","title":"Global technology and payments companies invest in Gojek","slug":"global-technology-and-payments-companies-invest-in-gojek-2","featured":false,"feature_image":"https://gojek-ghost.zysk.in/content/images/2020/06/FBPaypal-02.jpg","excerpt":"The investment will boost Southeast Asia’s digital economy and accelerate digital payments adoption among small businesses.","custom_excerpt":"The investment will boost Southeast Asia’s digital economy and accelerate digital payments adoption among small businesses.","visibility":"public","created_at_pretty":"03 June, 2020","published_at_pretty":"03 June, 2020","updated_at_pretty":"05 June, 2020","created_at":"2020-06-03T14:02:13.000+05:30","published_at":"2020-06-03T14:09:09.000+05:30","updated_at":"2020-06-05T15:26:28.000+05:30","meta_title":"Global technology and payments companies invest in Gojek","meta_description":"The investment will boost Southeast Asia’s digital economy and accelerate digital payments adoption among small businesses.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"News","slug":"news","description":"The latest official updates from Gojek—announcements, press releases, and news stories.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"News","slug":"news","description":"The latest official updates from Gojek—announcements, press releases, and news stories.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Gojek","slug":"gojek","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Funding","slug":"funding","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Startup","slug":"startup","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Gojek announced today that Facebook and PayPal have joined Google, Tencent and\nothers as investors in its current fundraise. This new investment will support\nGojek’s mission to boost Southeast Asia’s digital economy, with a focus on\nsupporting payments and financial services in the region.\n\nWith digital payments adoption primed to accelerate exponentially, the resources\nfrom some of the world’s leading global tech businesses will be combined with\nthe local focus and technology of Gojek.\n\nThis benefits millions of businesses and people across Indonesia and other parts\nof Southeast Asia.\n\nGojek’s payments business, GoPay, has long been focused on increasing access to\nthe digital economy among micro, small and medium enterprises (MSMEs), the\nmajority of which continue to rely on cash to operate, due to the region’s large\nunbanked population. The latest influx of funding will support more of these\nbusinesses as they seek to digitise further, from micro-merchants selling wares\non the street side, up to large businesses looking to strengthen their digital\npayment infrastructure.\n\nSince launching its app in 2015, Gojek has digitised hundreds of thousands of\nmerchants on its platform, providing them with access to more than 170 million\nusers across Southeast Asia. Its payments business processes billions of\ntransactions each year and owns the largest e-wallet in Indonesia. A large part\nof this is driven by GoFood, the largest food delivery service in Indonesia, as\nwell as the expansion of GoPay into other sectors both within and outside the\nGojek ecosystem.\n\nGojek Co-CEO, Andre Soelistyo, said:\n\n> This is great validation that the world’s most innovative tech companies\nrecognise the positive impact Gojek is making in Indonesia and the whole of\nSoutheast Asia. By working together, we have the opportunity to achieve\nsomething truly unique as we aim to help more businesses to digitise and ensure\nthat many millions more consumers are enjoying the benefits that the digital\neconomy can bring.\n> The COVID-19 pandemic and its associated issues have served as a tough reminder\nthat if our economies are to be more resilient, they must be underpinned by\ndigital infrastructure that diversifies the ways in which people can live and\ntransact. We see our role as a convener of global tech expertise, facilitating\ncollaboration that will ultimately lead to a better future for everyone in our\nregion.\nGojek Co-CEO, Kevin Aluwi, added:\n\n> Since we were founded, the story of Gojek’s growth has been inexorably linked\nwith the growth of the micro-entrepreneurs and small businesses on our platform\nand this will always be the case. With some of the world’s best technology\ncompanies as partners, we are confident that we can continue to deliver unique\nworld-class products and services for the various players in our ecosystem.\nFacebook’s investment is the first it has made in an Indonesia-based business as\nit seeks to create new opportunities for businesses in the country, including\nthrough its ubiquitous Whatsapp service.\n\nMatt Idema, Chief Operating Officer at WhatsApp, said: “Gojek, WhatsApp and\nFacebook are indispensable services in Indonesia. Working together we can help\nbring millions of small businesses and the customers they serve into the largest\ndigital economy in Southeast Asia.”\n\nAs part of its commercial agreement, PayPal’s payment capabilities will be\nintegrated into Gojek’s services and the two companies will also collaborate to\nallow customers of GoPay, Gojek’s digital wallet, to gain access to PayPal’s\nnetwork of more than 25 million merchants around the world.\n\nFarhad Maleki, Head of Corporate Development and Ventures for APAC at PayPal,\nsaid: “Southeast Asia is at an inflection point in digital adoption that creates\nnew opportunities to deliver financial services to previously unbanked merchants\nand consumers. We could not be more excited about entering into this strategic\nrelationship with Gojek to expand access and provide new experiences for our\ncollective customers in this dynamic market and around the world.”\n\nGoogle and Tencent are longstanding investors in Gojek. Both companies have\ncollaborated on multiple Gojek projects since their first investments in 2018.\n\nCaesar Sengupta, VP, Payments and Next Billion Users, Google, said: “Gojek’s\ninnovation and technologies have had an incredible impact in making life more\nconvenient for Indonesians across the country and in bringing its MSMEs online.\nWe’re pleased to continue to invest in and enable Gojek in its journey. Gojek’s\nsuccess points to the strength of the region’s internet economy and the\ninnovation in its start-up ecosystem.”\n\nJeffrey Li, Vice President of Tencent Holdings and Managing Partner of Tencent\nInvestment, said, “Gojek is effectively promoting digitization and financially\nenabling small businesses. We’re glad to strengthen our partnership through the\nincreased investment and we look forward to further collaboration with Gojek.”\n\nAbout Gojek Group\nGojek is Southeast Asia’s leading technology group and a pioneer of the\nintegrated Super App and ecosystem model. Gojek is founded on the principle of\nusing technology to remove life’s daily frictions by connecting consumers to the\nbest providers of goods and services in the market.\n\nThe company was first established in 2010 focusing on courier and motorcycle\nride-hailing services, before launching the app in January 2015 in Indonesia.\nSince then, Gojek has grown to become the leading Super App in Southeast Asia,\nproviding access to a wide range of services from transportation and digital\npayments, to food delivery, logistics, and many other on-demand services.\n\nGojek now operates across 207 cities in five Southeast Asian countries. As of\nend 2019, Gojek’s application and its ecosystem have been downloaded 170 million\ntimes by Gojek’s users across Southeast Asia. Based on the App Annie ‘2020 State\nof Mobile Report’, Gojek has become the most widely used on-demand application\nby Indonesians in 2019.\n\nAs a Super App, Gojek is dedicated to solving daily challenges faced by\nconsumers while also improving the quality of life for millions of people\nthroughout Southeast Asia, especially those in the informal sector and micro,\nsmall, and medium enterprises (MSMEs).\n\nThe Gojek app is available for iOS and Android.\n\nFor media queries, contact apoorva.babu@gojek.com.\n\nRead more stories on Gojek’s Engineering, Design, Product and Culture here\n[https://blog.gojekengineering.com/].","html":"<p>Gojek announced today that Facebook and PayPal have joined Google, Tencent and others as investors in its current fundraise. This new investment will support Gojek’s mission to boost Southeast Asia’s digital economy, with a focus on supporting payments and financial services in the region.</p><p>With digital payments adoption primed to accelerate exponentially, the resources from some of the world’s leading global tech businesses will be combined with the local focus and technology of Gojek.</p><p><strong>This benefits millions of businesses and people across Indonesia and other parts of Southeast Asia.</strong></p><p>Gojek’s payments business, GoPay, has long been focused on increasing access to the digital economy among micro, small and medium enterprises (MSMEs), the majority of which continue to rely on cash to operate, due to the region’s large unbanked population. The latest influx of funding will support more of these businesses as they seek to digitise further, from micro-merchants selling wares on the street side, up to large businesses looking to strengthen their digital payment infrastructure.</p><p>Since launching its app in 2015, Gojek has digitised hundreds of thousands of merchants on its platform, providing them with access to more than 170 million users across Southeast Asia. Its payments business processes billions of transactions each year and owns the largest e-wallet in Indonesia. A large part of this is driven by GoFood, the largest food delivery service in Indonesia, as well as the expansion of GoPay into other sectors both within and outside the Gojek ecosystem.</p><p><strong><strong>Gojek Co-CEO, Andre Soelistyo</strong></strong>, said:</p><blockquote><em><em>This is great validation that the world’s most innovative tech companies recognise the positive impact Gojek is making in Indonesia and the whole of Southeast Asia. By working together, we have the opportunity to achieve something truly unique as we aim to help more businesses to digitise and ensure that many millions more consumers are enjoying the benefits that the digital economy can bring.</em></em></blockquote><blockquote><em><em>The COVID-19 pandemic and its associated issues have served as a tough reminder that if our economies are to be more resilient, they must be underpinned by digital infrastructure that diversifies the ways in which people can live and transact. We see our role as a convener of global tech expertise, facilitating collaboration that will ultimately lead to a better future for everyone in our region.</em></em></blockquote><p><strong><strong>Gojek Co-CEO, Kevin Aluwi</strong></strong>, added:</p><blockquote><em><em>Since we were founded, the story of Gojek’s growth has been inexorably linked with the growth of the micro-entrepreneurs and small businesses on our platform and this will always be the case. With some of the world’s best technology companies as partners, we are confident that we can continue to deliver unique world-class products and services for the various players in our ecosystem.</em></em></blockquote><p>Facebook’s investment is the first it has made in an Indonesia-based business as it seeks to create new opportunities for businesses in the country, including through its ubiquitous Whatsapp service.</p><p><strong><strong>Matt Idema, Chief Operating Officer at WhatsApp</strong></strong>, said: “Gojek, WhatsApp and Facebook are indispensable services in Indonesia. Working together we can help bring millions of small businesses and the customers they serve into the largest digital economy in Southeast Asia.”</p><p>As part of its commercial agreement, PayPal’s payment capabilities will be integrated into Gojek’s services and the two companies will also collaborate to allow customers of GoPay, Gojek’s digital wallet, to gain access to PayPal’s network of more than 25 million merchants around the world.</p><p><strong><strong>Farhad Maleki, Head of Corporate Development and Ventures for APAC at PayPal</strong></strong>, said: “Southeast Asia is at an inflection point in digital adoption that creates new opportunities to deliver financial services to previously unbanked merchants and consumers. We could not be more excited about entering into this strategic relationship with Gojek to expand access and provide new experiences for our collective customers in this dynamic market and around the world.”</p><p>Google and Tencent are longstanding investors in Gojek. Both companies have collaborated on multiple Gojek projects since their first investments in 2018.</p><p><strong><strong>Caesar Sengupta, VP, Payments and Next Billion Users, Google</strong></strong>, said: “Gojek’s innovation and technologies have had an incredible impact in making life more convenient for Indonesians across the country and in bringing its MSMEs online. We’re pleased to continue to invest in and enable Gojek in its journey. Gojek’s success points to the strength of the region’s internet economy and the innovation in its start-up ecosystem.”</p><p><strong><strong>Jeffrey Li, Vice President of Tencent Holdings and Managing Partner of Tencent Investment</strong></strong>, said, “Gojek is effectively promoting digitization and financially enabling small businesses. We’re glad to strengthen our partnership through the increased investment and we look forward to further collaboration with Gojek.”</p><h3 id=\"about-gojek-group\">About Gojek Group</h3><p>Gojek is Southeast Asia’s leading technology group and a pioneer of the integrated Super App and ecosystem model. Gojek is founded on the principle of using technology to remove life’s daily frictions by connecting consumers to the best providers of goods and services in the market.</p><p>The company was first established in 2010 focusing on courier and motorcycle ride-hailing services, before launching the app in January 2015 in Indonesia. Since then, Gojek has grown to become the leading Super App in Southeast Asia, providing access to a wide range of services from transportation and digital payments, to food delivery, logistics, and many other on-demand services.</p><p>Gojek now operates across 207 cities in five Southeast Asian countries. As of end 2019, Gojek’s application and its ecosystem have been downloaded 170 million times by Gojek’s users across Southeast Asia. Based on the App Annie ‘2020 State of Mobile Report’, Gojek has become the most widely used on-demand application by Indonesians in 2019.</p><p>As a <strong><strong>Super App</strong></strong>, Gojek is dedicated to solving daily challenges faced by consumers while also improving the quality of life for millions of people throughout Southeast Asia, especially those in the informal sector and micro, small, and medium enterprises (MSMEs).</p><p>The Gojek app is available for iOS and Android.</p><figure class=\"kg-card kg-image-card\"><img src=\"https://gojek-ghost.zysk.in/content/images/2020/06/Blog-Separator.png\" class=\"kg-image\"></figure><p><strong><strong>For media queries, contact apoorva.babu@gojek.com.</strong></strong></p><p>Read more stories on Gojek’s Engineering, Design, Product and Culture <a href=\"https://blog.gojekengineering.com/\" rel=\"noopener\">here</a>.</p>","url":"https://gojek-ghost.zysk.in/global-technology-and-payments-companies-invest-in-gojek-2/","canonical_url":null,"uuid":"13b59881-8e93-449a-8b95-223c6821eabf","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5ed7600d7aa22c4066f83fc2","reading_time":4}}]},"otherPost":{"edges":[{"node":{"id":"Ghost__Post__5eb128c6f7c7da001effcd94","title":"Gojek Engineering — Guiding Principles 101","slug":"gojek-engineering-guiding-principles-101","featured":false,"feature_image":"https://res-3.cloudinary.com/hcq4cvthp/image/upload/q_auto/v1/ghost-blog-images/Culture1.gif","excerpt":"Pointers that help us build and run a unicorn startup,","custom_excerpt":"Pointers that help us build and run a unicorn startup,","visibility":"public","created_at_pretty":"05 May, 2020","published_at_pretty":"04 January, 2017","updated_at_pretty":"12 May, 2020","created_at":"2020-05-05T14:20:14.000+05:30","published_at":"2017-01-04T09:30:00.000+05:30","updated_at":"2020-05-12T11:57:57.000+05:30","meta_title":null,"meta_description":"Pointers that help us build and run a unicorn startup.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Culture","slug":"culture","description":"Writings on work culture at Gojek—explained through the lens of engineering and product decisions, and the experiences of GoTroops.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Culture","slug":"culture","description":"Writings on work culture at Gojek—explained through the lens of engineering and product decisions, and the experiences of GoTroops.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"By Ajey Gore\n\nWorking at Gojek means working with the best and brightest on the most\ncutting-edge technologies. While it is extremely rewarding, it is also\nchallenging. This is because we often work on tough problems with no clear\nsolution — which involves taking risks and learning things on the fly.\n\nAll this, while competing with the best in the industry.\n\nThat’s why our guiding principles serve as a great reference point to deal with\nsituations that arise every day. Here are some that we abide by:\n\nEveryone writes code — At Gojek, we believe that Software\nPrincipals/Architects/Engineers can only do the right thing when they work on\ncode themselves. It’s the only way to decide what’s working and what’s not. We\ndon’t believe that software requires a 50,000 foot overview with people\nexclusively working on the blueprint. At Gojek, writing software is not a\nlow-level task; it’s at the very core of what we do.\n\nLeaders who code are better judges of technical skill.\n\nEveryone needs to ‘walk the talk’ — We respect people who get down in the\ntrenches and take a hands-on approach to problem solving. Based on our\nexperience, standing at a distance and issuing commandments has many a time been\ninefficient and error prone, and hence we avoid this.\n\nLeaders are grown and not made — We believe in acquired respect and leadership,\nnot leadership by position. At Gojek, you earn your leadership mettle. We\nbelieve in helping our people grow into leadership roles by giving them chances,\nrisk appetite and freedom. We trust our people and support them to do the right\nthing at any given moment. In my own career, I’ve been privileged enough to have\nfound some amazing mentors, and I am glad to be able to continue the legacy at\nGojek.\n\nEvery decision is correct at the time it is made — Swift decision-making is\nextremely important in a fast paced environment like ours. Once a decision is\nmade, we don’t constantly agonise over it or second guess. We trust that\nwhenever someone makes a decision, it is the right one, given the information\navailable to them at that time. Only the passage of time can tell us whether a\nparticular decision was right or wrong. It’s OK to change decisions, and we\nencourage people to not be afraid to make a decision.\n\nEvery person has some strengths, even if we don’t always see them — A great team\nis built with a group of people who have complementary skill sets. A combination\nof different strengths make teams that can tackle all kinds of situations. At\nGojek, we believe each one of us is unique and has unique strengths. It’s just a\nmatter of finding the right role to match the skills. Teams become super strong\nwhen they appreciate each other’s strengths.\n\nWorking in tech means learning all the time — Learning is important in every\nfield. In the technology industry, it is a matter of life and death. Technology\nis changing all the time, what worked a decade ago may be completely obsolete\nnow. For example, practices that worked in Waterfall don’t work in Agile, and\nuser experiences on mobile apps were unimaginable a few years back. So, we\nconstantly look for and admire people who are curious and willing to learn.\n\nThe best part? Such people will always hire people they can learn from!\n\nPair Programming and Test-Driven Development (TDD) work — If they didn’t, our\nteams wouldn’t exist. Wherever we have followed this, we found our team’s job on\nsupporting software is more around features than bugs! We have experienced over\ndecades that this helps us build features faster, and mature teams organically.\nThe bottom line is : to write beautiful code, we believe there is no better way\nthan rigorous pair programming and practising TDD.","html":"<p>By Ajey Gore</p><p>Working at Gojek means working with the best and brightest on the most cutting-edge technologies. While it is extremely rewarding, it is also challenging. This is because we often work on tough problems with no clear solution — which involves taking risks and learning things on the fly.</p><p><em><em>All this, while competing with the best in the industry.</em></em></p><p>That’s why our guiding principles serve as a great reference point to deal with situations that arise every day. Here are some that we abide by:</p><p><strong><strong>Everyone writes code — </strong></strong>At Gojek, we believe that Software Principals/Architects/Engineers can only do the right thing when they work on code themselves. It’s the only way to decide what’s working and what’s not. We don’t believe that software requires a 50,000 foot overview with people exclusively working on the blueprint. At Gojek, writing software is <strong><strong>not</strong></strong> a low-level task; it’s at the very core of what we do.</p><p>Leaders who code are better judges of technical skill.</p><p><strong><strong>Everyone needs to ‘walk the talk’ — </strong></strong>We respect people who get down in the trenches and take a hands-on approach to problem solving. Based on our experience, standing at a distance and issuing commandments has many a time been inefficient and error prone, and hence we avoid this.</p><p><strong><strong>Leaders are grown and not made</strong></strong> — We believe in acquired respect and leadership, not leadership by position. At Gojek, you earn your leadership mettle. We believe in helping our people grow into leadership roles by giving them chances, risk appetite and freedom. We trust our people and support them to do the right thing at any given moment. In my own career, I’ve been privileged enough to have found some amazing mentors, and I am glad to be able to continue the legacy at Gojek.</p><p><strong><strong>Every decision is correct at the time it is made</strong></strong> — Swift decision-making is extremely important in a fast paced environment like ours. Once a decision is made, we don’t constantly agonise over it or second guess. We trust that whenever someone makes a decision, it is the right one, given the information available to them at that time. Only the passage of time can tell us whether a particular decision was right or wrong. It’s OK to change decisions, and we encourage people to not be afraid to make a decision.</p><p><strong><strong>Every person has some strengths, even if we don’t always see them</strong></strong> — A great team is built with a group of people who have complementary skill sets. A combination of different strengths make teams that can tackle all kinds of situations. At Gojek, we believe each one of us is unique and has unique strengths. It’s just a matter of finding the right role to match the skills. Teams become super strong when they appreciate each other’s strengths.</p><p><strong><strong>Working in tech means learning all the time</strong></strong> — Learning is important in every field. In the technology industry, it is a matter of life and death. Technology is changing all the time, what worked a decade ago may be completely obsolete now. For example, practices that worked in Waterfall don’t work in Agile, and user experiences on mobile apps were unimaginable a few years back. So, we constantly look for and admire people who are curious and willing to learn.</p><p>The best part? Such people will always hire people they can learn from!</p><p><strong><strong>Pair Programming and Test-Driven Development (TDD) work </strong></strong>— If they didn’t, our teams wouldn’t exist. Wherever we have followed this, we found our team’s job on supporting software is more around features than bugs! We have experienced over decades that this helps us build features faster, and mature teams organically. The bottom line is : to write beautiful code, we believe there is no better way than rigorous pair programming and practising TDD.</p>","url":"https://gojek-ghost.zysk.in/gojek-engineering-guiding-principles-101/","canonical_url":null,"uuid":"9afc126f-c3cc-4649-8eb1-6b1f10431f93","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eb128c6f7c7da001effcd94","reading_time":3}},{"node":{"id":"Ghost__Post__5eb12b71f7c7da001effcdbe","title":"How Gojek Manages 1 million Drivers With 12 Engineers (Part 1)","slug":"how-gojek-manages-1-million-drivers-with-12-engineers-part-1","featured":true,"feature_image":"https://res-3.cloudinary.com/hcq4cvthp/image/upload/q_auto/v1/ghost-blog-images/1_0G01nMPD--K_MrKhhkurtw.jpg","excerpt":"The story of GOJEK’s first ever team, and consequently, the psyche of how 200 engineers run a Super App of 18+ products.","custom_excerpt":"The story of GOJEK’s first ever team, and consequently, the psyche of how 200 engineers run a Super App of 18+ products.","visibility":"public","created_at_pretty":"05 May, 2020","published_at_pretty":"24 May, 2018","updated_at_pretty":"12 May, 2020","created_at":"2020-05-05T14:31:37.000+05:30","published_at":"2018-05-24T09:30:00.000+05:30","updated_at":"2020-05-12T11:57:36.000+05:30","meta_title":null,"meta_description":"The story of GOJEK’s first ever team, and consequently, the psyche of how 200 engineers run a Super App of 18+ products.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"}],"primary_author":{"name":"Gojek","slug":"gojek","bio":"Gojek is a Super App. It’s one app for ordering food, commuting, digital payments, shopping, hyper-local delivery, and two dozen services.","profile_image":"https://gojek-ghost.zysk.in/content/images/2020/05/logo-01-1.png","twitter":"@gojektech","facebook":"gojektech","website":"https://www.gojek.io"},"primary_tag":{"name":"Stories","slug":"stories","description":"Deep dives into high-impact initiatives and products that helped Gojek create significant impact.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Stories","slug":"stories","description":"Deep dives into high-impact initiatives and products that helped Gojek create significant impact.","feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"By Adithya Venkatesan\n\nIn Norse mythology, Yggdrasil is a gigantic mythical tree that connects the nine\nworlds of Norse cosmology. It’s a holy tree whose branches touch the heavens.\nThe gods hold court beneath Yggdrasil — debating the fates of other gods, men\nand monsters. It’s the tree of life and the centre of everything in Norse\nmythology. In GOJEK, think of the `Allocations` team as this eternal green ash\ntree. Our multiple products rely on this team to assign drivers to complete\norders.\n\nThe team cuts across products and services responsible for 1,000,000+ registered\ndrivers on our platform.\n\nAnd 12 engineers do this.\n\nA similar ride-sharing equivalent has 300-odd people solving the same problem\nand still does fewer bookings. But how do they do it? This is their story.\n\nOn planet Earth, problems galore\nWhen GOJEK started in 2010, it all began with a call centre. Customers would\ncall a number, the call centre would ‘allocate’ a driver after looking at an\nExcel sheet of drivers in the roster. Our CEO Nadiem Makarim was the first\nperson to test the app built for drivers and customers. As soon as a dummy order\nwas created and Nadiem got the first notification, GOJEK was open for business.\n\nAt its peak in 2014, GOJEK had 200 drivers. The 3-person engineering team had a\nbasic stop-gap model of matchmaking between a driver and a customer. This\ncodebase had to be reworked to match scale. The new matchmaking codebase was\nbuilt in two days and could handle about 700 drivers. It was all manual and\nsomething had to be done to automate\n[https://blog.gojekengineering.com/how-we-do-what-we-do-at-go-jek-tech-d1d5d952e13] \nthe whole process.\n\nIn the beginning of 2015, a version of the app was launched to keep pace with\nincreasing demand. GO-RIDE, GO-FOOD and GO-SEND went live. Customers would ‘bid’\nfor a driver, drivers would get a notification, accept a drive and voila, we’re\ngood to go. This was the birth of the ‘bid engine’ — a classic matchmaker\nbetween supply and demand: Driver and Customer. It would form the genesis on\nwhich GOJEK was going to be built. The problem: siloed boxes.\n\nThere were a total of three products with the same underlying infrastructure,\nbut no interconnectedness. THAT was a problem that shouldn’t exist when success\ndepends on deeper linkage between all teams. This problem is further pronounced\nwhen you realise all three teams were working on the same infrastructure.\n\nImportantly, GOJEK simply wasn’t prepared to handle the kind of adoption and\ngrowth the company began to witness as soon as the app was launched.\n\nThe algorithm started to crumble. The engineering was pretty straightforward\nwith 10–15 lines of code, and solved problems for a small set of data. As the\ndrivers increased, downtimes became a routine affair. There were way too many\nbottlenecks. GOJEK was failing, and fast.\n\nSoon, Sequoia had mutual investment portfolios and unlocked some doors. Sidu\nPonnappa, our current India Head, then the CEO of CodeMonk, travelled to\nIndonesia to pick between three of Sequoia’s companies. The team’s ultimate\ndecision to work with GOJEK is not entirely surprising because it was bigger,\nlarger than anything they had witnessed in India. The market was ripe for the\ntaking. Read his telling tale from his first visit to Indonesia here.\n[https://blog.gojekengineering.com/my-go-jek-story-af5f1925bfe]\n\nIn no time, Nadiem acquired CodeMonk. But before that, our current CTO, Niranjan\nParanjappe was being poached. ? The team stood together. It was all, or none.\n\nAnd Nadiem wanted all. The deal was closed in a small tea shop between Sidu,\nNiranjan, Nadiem, Ajey and Kevin. Overnight, GOJEK had one of India’s best\nconsulting firms in its arsenal. The task for the engineering team: Work on the\nbidding engine. No more downtimes.\n\nIt’s the 0’s and 1’s\nThe old codebase was written in Java. It’s a programming language that belonged\nto the Internet age. But not for a startup in 2015 that was exploding in demand\nand imploding with a lack of resources and engineering wherewithal. Why Java?\nBecause, the classic Golden Hammer Anti-Pattern:\n\n“If all you have is a hammer, everything looks like a nail.” And hence, ‘I know\nJava, so Java is the best.’\n\nNiranjan Paranjape\n[https://medium.com/u/689ebe477c46?source=post_page-----978af9ccfd32----------------------]\n, our now CTO (Ajey Gore\n[https://medium.com/u/bb9ef62c7bae?source=post_page-----978af9ccfd32----------------------] \nis our Group CTO), plugged in the hard drive and checked the code. As soon as he\nopened the README file, the first line was mvn install -DskipTest\n\nThe code had *never* been tested.\n\nIn other words, the code was live without ever passing a single quality check.\nThe old codebase was called Stan Marsh\n[https://blog.gojekengineering.com/thank-you-stan-marsh-29db553544bf]. For the\nuninitiated, Stan Marsh is a character from South Park, and if you watch the\nshow, you’d get the obvious reference to the famous line:\n\n> “Dude, this is pretty f****d up right here.”\nAnd thus it came to be. Stan Marsh was the legacy code on which GOJEK was going\nto be built. Because there was no test harness, it was difficult to understand\nwhich portion of the app was working, and which wasn’t. Considering the app was\nlive, no one wanted to touch a ticking time bomb. It was… sorry, is… very much\npart of engineering folklore. (More on that later)\n\nAs urban legends go, Niranjan re-wrote the entire codebase in Golang, a language\nhe didn’t know. Three nights. A dozen Redbulls. Two dozen coffees. Golang could\nhandle concurrency, manage load; the kind GOJEK was witnessing. The mothership\nwas ready. Or so the team thought.\n\nIt wasn’t an easy decision to go with Golang. Not many knew the programming\nlanguage. But some risks are worth taking — and that defines good engineering\nfrom great. Luckily, this initial decision-making set the tone for the team;\nlearn, experiment, adapt, take responsibility or be disrupted. In a month,\nGOJEK’s driver count tripled. But… there were more problems to come. Bigger fish\nto fry.\n\nFor Part 2 of the story, please click here\n[https://blog.gojekengineering.com/how-go-jek-manages-1-million-drivers-with-12-engineers-part-2-35f6a27a0faf]\n\n\n--------------------------------------------------------------------------------\n\nStory credits: Shobhit Srivastava\n[https://medium.com/u/e5f92a17704d?source=post_page-----978af9ccfd32----------------------]\n, Ranjeet Singh\n[https://medium.com/u/710d3b419a5a?source=post_page-----978af9ccfd32----------------------]\n, Mehakdeep Singh\n[https://medium.com/u/36ce12a82c52?source=post_page-----978af9ccfd32----------------------]\n, Bergas Bimo Branarto\n[https://medium.com/u/5cffcceadf08?source=post_page-----978af9ccfd32----------------------]","html":"<p>By Adithya Venkatesan</p><p>In Norse mythology, <em><em>Yggdrasil</em></em> is a gigantic mythical tree that connects the nine worlds of Norse cosmology. It’s a holy tree whose branches touch the heavens. The gods hold court beneath <em><em>Yggdrasil — </em></em>debating the fates of other gods, men and monsters. It’s the tree of life and the centre of everything in Norse mythology. In GOJEK, think of the <strong><strong><em><em>`Allocations` </em></em></strong></strong>team as this eternal green ash tree. Our multiple products rely on this team to assign drivers to complete orders.</p><p>The team cuts across products and services responsible for 1,000,000+ registered drivers on our platform.</p><p><strong>And 12 engineers do this.</strong></p><p>A similar ride-sharing equivalent has 300-odd people solving the same problem and still does fewer bookings. But how do they do it? This is their story.</p><h2 id=\"on-planet-earth-problems-galore\">On planet Earth, problems galore</h2><p>When GOJEK started in 2010, it all began with a call centre. Customers would call a number, the call centre would ‘allocate’ a driver after <em><em>looking at an Excel sheet of drivers</em></em> in the roster. Our CEO Nadiem Makarim was the first person to test the app built for drivers and customers. As soon as a dummy order was created and Nadiem got the first notification, GOJEK was open for business.</p><p>At its peak in 2014, GOJEK had 200 drivers. The 3-person engineering team had a basic stop-gap model of matchmaking between a driver and a customer. This codebase had to be reworked to match scale. The new matchmaking codebase was built in two days and could handle about 700 drivers. It was all manual and something had to be done to <a href=\"https://blog.gojekengineering.com/how-we-do-what-we-do-at-go-jek-tech-d1d5d952e13\" rel=\"noopener\">automate</a> the whole process.</p><p>In the beginning of 2015, a version of the app was launched to keep pace with increasing demand. GO-RIDE, GO-FOOD and GO-SEND went live. Customers would ‘bid’ for a driver, drivers would get a notification, accept a drive and voila, we’re good to go. This was the birth of the ‘<strong><strong>bid engine’ — a classic matchmaker between supply and demand:</strong></strong> Driver and Customer. <em><em>It would form the genesis on which GOJEK was going to be built</em></em>. The problem: siloed boxes.</p><p>There were a total of three products with the same underlying infrastructure, but no interconnectedness. THAT was a problem that shouldn’t exist when success depends on deeper linkage between all teams. This problem is further pronounced when you realise all three teams were working on the same infrastructure.</p><p><em><em>Importantly, GOJEK simply wasn’t prepared to handle the kind of adoption and growth the company began to witness as soon as the app was launched.</em></em></p><p>The algorithm started to crumble. The engineering was pretty straightforward with 10–15 lines of code, and solved problems for a small set of data. As the drivers increased, downtimes became a routine affair. There were way too many bottlenecks. <strong><strong>GOJEK was failing, and fast.</strong></strong></p><p>Soon, Sequoia had mutual investment portfolios and unlocked some doors. Sidu Ponnappa, our current India Head, then the CEO of CodeMonk, travelled to Indonesia to pick between three of Sequoia’s companies. The team’s ultimate decision to work with GOJEK is not entirely surprising because it was bigger, larger than anything they had witnessed in India. The market was ripe for the taking. Read his telling tale from his first visit to Indonesia <a href=\"https://blog.gojekengineering.com/my-go-jek-story-af5f1925bfe\" rel=\"noopener\">here.</a></p><p><em><em>In no time, Nadiem acquired CodeMonk. But before that, our current CTO, Niranjan Paranjappe was being poached. <em>? </em>The team stood together. It was all, or none.</em></em></p><p>And Nadiem wanted all. <strong><strong>The deal was closed in a small tea shop</strong></strong> between Sidu, Niranjan, Nadiem, Ajey and Kevin. Overnight, GOJEK had one of India’s best consulting firms in its arsenal. The task for the engineering team: Work on the bidding engine. No more downtimes.</p><h2 id=\"it-s-the-0-s-and-1-s\">It’s the 0’s and 1’s</h2><p>The old codebase was written in Java. It’s a programming language that belonged to the Internet age. But not for a startup in 2015 that was exploding in demand and imploding with a lack of resources and engineering wherewithal. Why Java? Because, the classic <strong><strong>Golden Hammer Anti-Pattern:</strong></strong></p><p><em><em>“If all you have is a hammer, everything looks like a nail.” And hence, ‘I know Java, so Java is the best.’</em></em></p><p><a href=\"https://medium.com/u/689ebe477c46?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Niranjan Paranjape</a>, our now CTO (<a href=\"https://medium.com/u/bb9ef62c7bae?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Ajey Gore</a> is our Group CTO), plugged in the hard drive and checked the code. As soon as he opened the README file, the first line was mvn install -DskipTest</p><p><strong><strong>The code had *<em><em>never</em></em>* been tested.</strong></strong></p><p>In other words, the code was live without ever passing a single quality check. The old codebase was called <a href=\"https://blog.gojekengineering.com/thank-you-stan-marsh-29db553544bf\" rel=\"noopener\"><strong><strong>Stan Marsh</strong></strong></a><strong><strong>.</strong></strong> For the uninitiated, Stan Marsh is a character from South Park, and if you watch the show, you’d get the obvious reference to the famous line:</p><figure class=\"kg-card kg-image-card\"><img src=\"https://miro.medium.com/max/1600/1*Mk4tc6cfIHlC_f1CblNGNQ.jpeg\" class=\"kg-image\"></figure><blockquote><em><em>“Dude, this is pretty f****d up right here.”</em></em></blockquote><p>And thus it came to be. <strong><strong>Stan Marsh was the legacy code on which GOJEK was going to be built</strong></strong>. Because there was no test harness, it was difficult to understand which portion of the app was working, and which wasn’t. Considering the app was live, no one wanted to touch a ticking time bomb. It was… sorry, is… very much part of engineering folklore. (More on that later)</p><p>As urban legends go, Niranjan re-wrote the entire codebase in Golang, a language he didn’t know. Three nights. A dozen Redbulls. Two dozen coffees. Golang could handle concurrency, manage load; the kind GOJEK was witnessing. The mothership was ready. Or so the team thought.</p><p>It wasn’t an easy decision to go with Golang. Not many knew the programming language. But some risks are worth taking — and that defines good engineering from great. Luckily, this initial decision-making set the tone for the team; learn, experiment, adapt, take responsibility or be disrupted. In a month, GOJEK’s driver count tripled. But… there were more problems to come. Bigger fish to fry.</p><p>For Part 2 of the story, please click <a href=\"https://blog.gojekengineering.com/how-go-jek-manages-1-million-drivers-with-12-engineers-part-2-35f6a27a0faf\" rel=\"noopener\">here</a></p><hr><p>Story credits: <a href=\"https://medium.com/u/e5f92a17704d?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Shobhit Srivastava</a>, <a href=\"https://medium.com/u/710d3b419a5a?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Ranjeet Singh</a>, <a href=\"https://medium.com/u/36ce12a82c52?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Mehakdeep Singh</a>, <a href=\"https://medium.com/u/5cffcceadf08?source=post_page-----978af9ccfd32----------------------\" rel=\"noopener\">Bergas Bimo Branarto</a></p>","url":"https://gojek-ghost.zysk.in/how-gojek-manages-1-million-drivers-with-12-engineers-part-1/","canonical_url":null,"uuid":"ba3d779e-27f2-41a6-ac1d-cd753222d7dd","page":null,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5eb12b71f7c7da001effcdbe","reading_time":4}}]}},"pageContext":{"slug":"reducing-latency-with-sidecar"}}}